g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Integrated",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
cor.test(tab.mg$prop.sep,tab.mg$prop.int)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Pulpescu)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
cor.test(tab.mg$prop.sep,tab.mg$prop.int)
# tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus),length)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$T21Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab.mg = merge(tab,tab2,by=c("annot","organ","disease"))
# colnames(tab.mg)[4:7] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Ts21)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
cor.test(tab.mg$prop.sep,tab.mg$prop.int)
library(data.table)
i=0; df = list()
for (disease_status in c("DownSyndrome","Healthy")) {
for (sampletype in c("Femur","Liver")) {
i=i+1
f=paste0("~/Downloads/10X_",disease_status,"_",sampletype,".cellComp.csv")
# f=paste0("~/Documents/Research/t21-proj/out/full/cellComp/10X_",disease_status,"_",sampletype,".cellComp.csv")
df[[i]]=fread(f,data.table = F,stringsAsFactors = F)
colnames(df[[i]])[6] = "leiden_latest"
df[[i]]$disease=disease_status
df[[i]]$env = sampletype
}
}
df.lst=df
df=as.data.frame(do.call(rbind,df.lst))
df.uniq = unique(df[,c("leiden_latest","cell_type_groups")])
# library(data.table)
# refmap = fread("~/Downloads/scArches_Healthy_Liver_metadata.csv",data.table = F,stringsAsFactors = F)
# refmap$cellname=unlist(lapply(strsplit(refmap$barcode,"-"),function(x) paste(x[1:2],collapse = "-")))
# refmap$patient_sample = paste0(refmap$patient," ",refmap$sample)
# refmap_broad = fread("~/Downloads/ref_broad_map.csv",data.table = F,stringsAsFactors = F)
# refmap = merge(refmap,refmap_broad,by="Predicted")
library(data.table)
refmap = fread("~/Downloads/scArches_Healthy_Liver_metadata.csv",data.table = F,stringsAsFactors = F)
refmap$cellname=unlist(lapply(strsplit(refmap$barcode,"-"),function(x) paste(x[1:2],collapse = "-")))
refmap$patient_sample = paste0(refmap$patient," ",refmap$sample)
refmap_t21 = fread("~/Downloads/Healthy_liver_annotations.txt",data.table = F,stringsAsFactors = F)
refmap_t21 = refmap_t21[,c(1:2,5:6)]
refmap_t21 = merge(refmap[,c("patient","sample","cellname","patient_sample")],refmap_t21,by=c("sample","cellname"))
refmap_broad = fread("~/Downloads/ref_broad_map.csv",data.table = F,stringsAsFactors = F)
refmap = merge(refmap_t21,refmap_broad,by.x="Popescu_transfer",by.y="Predicted")
refmap_broad_t21 = fread("~/Downloads/t21_transfer.broad.csv",data.table = F,stringsAsFactors = F)
refmap = merge(refmap,refmap_broad_t21,by.x="T21_transfer",by.y="T21_transfer")
dataf = fread("~/Downloads/a3_tab.obs.withannot.csv",data.table = F,stringsAsFactors = F)
dataf.scvi = fread("~/Downloads/b3_tab.obs.withannot.csv",data.table = F,stringsAsFactors = F)
dataf = merge(dataf,dataf.scvi[,c("barcodekey","combi_annot_v3")],by="barcodekey")
dataf2 = merge(dataf,df.uniq,by="leiden_latest",all.x=TRUE)
dataf2$cellname=unlist(lapply(strsplit(dataf2$barcodekey,"-"),function(x) paste(x[1:2],collapse = "-")))
df$cellname=unlist(lapply(strsplit(df$V1,"-"),function(x) paste(x[1:2],collapse = "-")))
df$patient_sample = paste0(df$patient," ",df$sample)
dataf3 = merge(dataf2,df[,c("cellname","patient_sample","sorting")],by=c("cellname","patient_sample"),all.x=TRUE)
library(data.table)
new_annot_mapping = fread("~/Downloads/new_annot_mapping.csv",data.table = F,stringsAsFactors = F)
dataf3 = merge(dataf3,new_annot_mapping,by="combi_annot",all.x=TRUE)
new_annot_mapping_scvi = fread("~/Downloads/new_annot_mapping.scvi.csv",data.table = F,stringsAsFactors = F)
colnames(new_annot_mapping_scvi)[2] = "broad_annot_scvi"
dataf3 = merge(dataf3,new_annot_mapping_scvi,by="combi_annot_v3",all.x=TRUE)
dataf3.old = dataf3
rm(dataf2)
rm(df)
rm(dataf)
rm(dataf.scvi)
dataf4=merge(dataf3,refmap,by=c("patient_sample","cellname"),all.x=TRUE)
dataf4.full = dataf4
dataf4 = subset(dataf4.full,Organ=="Liver" & DiseaseStatus=="Healthy" )#& broad_annot != "Stroma" & cell_type_groups !="Stroma" & broad_annot_scvi!="Stroma")
dataf4[dataf4=="Stroma"] = NA
keepers = read.table(text="Patient ID	Patient	Tissue	Organ	Sorting strategy	Age
15532 T21 15532 A	15532	Down Syndrome	Liver	CD45+	14 pcw
15532 T21 15532 B	15532	Down Syndrome	Liver	CD45+	14 pcw
15559 T21 15559 B	15559	Down Syndrome	Liver	CD45+	12 pcw
15559 T21 15559 C	15559	Down Syndrome	Liver	CD45+	12 pcw
15582 T21 15582 B	15582	Down Syndrome	Liver	CD45+	13 pcw
15646 15646B	15646	Down Syndrome	Liver	CD45+	13 pcw
15669 15669H	15669	Down Syndrome	Liver	CD45+	14 pcw
15712 15712A	15712	Down Syndrome	Liver	CD45+	12 pcw
15724 15724C	15724	Down Syndrome	Liver	CD45+	13 pcw
15734 L15734A	15734	Down Syndrome	Liver	CD45+	14 pcw
15633 L15633B	15633	Healthy	Liver	CD45+	14 pcw
15657 L15657A	15657	Healthy	Liver	CD45+	12 pcw
15781 L15781D	15781	Healthy	Liver	CD45+	13 pcw",sep="\t",header=T)
# dataf3 = subset(dataf3.old,sorting=="CD45+")
dataf3 = subset(dataf4,sorting=="CD45+" & patient_sample %in% keepers$Patient.ID)
# tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus),length)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$T21Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab.mg = merge(tab,tab2,by=c("annot","organ","disease"))
# colnames(tab.mg)[4:7] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Ts21)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
keepers = read.table(text="Patient ID	Patient	Tissue	Organ	Sorting strategy	Age
15532 T21 15532 A	15532	Down Syndrome	Liver	CD45+	14 pcw
15532 T21 15532 B	15532	Down Syndrome	Liver	CD45+	14 pcw
15559 T21 15559 B	15559	Down Syndrome	Liver	CD45+	12 pcw
15559 T21 15559 C	15559	Down Syndrome	Liver	CD45+	12 pcw
15582 T21 15582 B	15582	Down Syndrome	Liver	CD45+	13 pcw
15646 15646B	15646	Down Syndrome	Liver	CD45+	13 pcw
15669 15669H	15669	Down Syndrome	Liver	CD45+	14 pcw
15712 15712A	15712	Down Syndrome	Liver	CD45+	12 pcw
15724 15724C	15724	Down Syndrome	Liver	CD45+	13 pcw
15734 L15734A	15734	Down Syndrome	Liver	CD45+	14 pcw
15633 L15633B	15633	Healthy	Liver	CD45+	14 pcw
15657 L15657A	15657	Healthy	Liver	CD45+	12 pcw
15781 L15781D	15781	Healthy	Liver	CD45+	13 pcw",sep="\t",header=T)
# dataf3 = subset(dataf3.old,sorting=="CD45+")
dataf3 = subset(dataf4,sorting=="CD45+" & patient_sample %in% keepers$Patient.ID)
# tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus),length)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$T21Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab.mg = merge(tab,tab2,by=c("annot","organ","disease"))
# colnames(tab.mg)[4:7] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Ts21)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$T21Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Pulpescu)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
pdf("~/Downloads/ref_pulpescu.pdf",width = 7,height = 6)
print(g1)
dev.off()
pdf("~/Downloads/ref_pulpescu.pdf",width = 7,height = 5.5)
print(g1)
dev.off()
# tab.mg = merge(tab,tab2,by=c("annot","organ","disease"))
# colnames(tab.mg)[4:7] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Ts21)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
pdf("~/Downloads/ref_ts21.pdf",width = 7,height = 5.5)
print(g1)
dev.off()
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.int,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Pulpescu)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
pdf("~/Downloads/ref_pulpescu.pdf",width = 7,height = 5.5)
print(g1)
dev.off()
f.output="~/Downloads/real.de.txt"
de1 = fread(f.output,data.table = F,stringsAsFactors = F)
f.output="~/Downloads/fake.de.txt"
de2 = fread(f.output,data.table = F,stringsAsFactors = F)
de.mg = merge(de1,de2,by='names')
library(ggplot2)
de.mg$chr21 = ifelse(de.mg$chromosome_name.x==21,"Chrom 21","Other chrom")
ggplot(de.mg,aes(x=logFC.x,y=logFC.y,col=chr21)) + geom_point() + geom_abline(slope=1,intercept=0,lty='dashed') + theme_bw() +
labs(x='LFC (real data)',y='LFC (spiked chr21)',col='') + theme(panel.grid = element_blank()) + scale_color_manual(values=c("orange","black"))
g=ggplot(de.mg,aes(x=logFC.x,y=logFC.y,col=chr21)) + geom_point() + geom_abline(slope=1,intercept=0,lty='dashed') + theme_bw() +
labs(x='LFC (real data)',y='LFC (spiked chr21)',col='') + theme(panel.grid = element_blank()) + scale_color_manual(values=c("orange","black"))
pdf("~/Downloads/chr21spike_lfc_corr.pdf",width=5,height=5)
print(g)
dev.off()
pdf("~/Downloads/chr21spike_lfc_corr.pdf",width=7,height=5)
print(g)
dev.off()
pdf("~/Downloads/chr21spike_lfc_corr.pdf",width=5.5,height=4)
print(g)
dev.off()
library(data.table)
library(Matrix.utils)
# library(Seurat)
library(DESeq2)
library(variancePartition)
library('edgeR')
library(data.table)
library(ggplot2)
x=2.4
per_fetus=FALSE
for_cellComp <- fread("~/Documents/Research/t21-proj/out/etc/for_cellComp.csv",data.table = F,stringsAsFactors = F)
if (per_fetus) {
for_cellComp$`Patient ID` <- for_cellComp$Patient
}
convert_to_percentages <- function(counts,total_counts) {
for (patient.uniq in unique(counts$Patient_ID)) {
total_num_cells <- subset(total_counts,Var1==patient.uniq)$Freq
counts$Freq[counts$Patient_ID==patient.uniq] <- counts$Freq[counts$Patient_ID==patient.uniq]/total_num_cells
}
return(counts)
}
convert_to_cluster_percentages <- function(counts,total_counts) {
for (patient.uniq in unique(counts$Patient_ID)) {
for (broad_cell in unique(counts$cell_type_groups)) {
total_num_cells <- subset(total_counts,Patient_ID==patient.uniq & cell_type_groups==broad_cell)$Freq
counts$Freq[counts$Patient_ID==patient.uniq & counts$cell_type_groups==broad_cell] <- counts$Freq[counts$Patient_ID==patient.uniq & counts$cell_type_groups==broad_cell]/total_num_cells
}
}
return(counts)
}
total_counts <- list()
group_counts <- list()
group_percentages <- list()
group_matrix <- list()
cluster_counts <- list()
cluster_percentages <- list()
cluster_matrix <- list()
df <- list()
cluster_to_label_mapping <- list()
all_patients <- list()
for (sampletype in c("Femur","Liver")) {
cluster_counts[[sampletype]] <- list()
cluster_percentages[[sampletype]] <- list()
cluster_matrix[[sampletype]] <- list()
group_counts[[sampletype]] <- list()
group_percentages[[sampletype]] <- list()
group_matrix[[sampletype]] <- list()
total_counts[[sampletype]] <- list()
df[[sampletype]] <- list()
all_patients[[sampletype]] <- list()
cluster_to_label_mapping[[sampletype]] <- list()
for (disease_status in c("DownSyndrome","Healthy")) {
cluster_counts[[sampletype]][[disease_status]] <- list()
cluster_percentages[[sampletype]][[disease_status]] <- list()
cluster_matrix[[sampletype]][[disease_status]] <- list()
group_counts[[sampletype]][[disease_status]] <- list()
group_percentages[[sampletype]][[disease_status]] <- list()
group_matrix[[sampletype]][[disease_status]] <- list()
total_counts[[sampletype]][[disease_status]] <- list()
cluster_to_label_mapping[[sampletype]][[disease_status]] <- fread(paste0("~/Documents/Research/t21-proj/out/full/cluster_to_label_mapping/10X_",disease_status,"_",sampletype,".cluster_to_label_mapping.csv"),data.table = F,stringsAsFactors = F)[,c(3,4)]
colnames(cluster_to_label_mapping[[sampletype]][[disease_status]])[1] <- 'cluster'
df[[sampletype]][[disease_status]] <- fread(paste0("~/Documents/Research/t21-proj/out/full/cellComp/10X_",disease_status,"_",sampletype,".cellComp.csv"),data.table = F,stringsAsFactors = F)
df[[sampletype]][[disease_status]]$Patient_ID <- paste(df[[sampletype]][[disease_status]]$patient,df[[sampletype]][[disease_status]]$sample,sep=" ")
if (per_fetus) {
df[[sampletype]][[disease_status]]$Patient_ID <- df[[sampletype]][[disease_status]]$patient
}
df[[sampletype]][[disease_status]] <- subset(df[[sampletype]][[disease_status]],Patient_ID %in% for_cellComp[,"Patient ID"])
df[[sampletype]][[disease_status]] <- subset(df[[sampletype]][[disease_status]],cell_type_groups != "Unknown")
all_patients[[sampletype]][[disease_status]] <- list()
for (sorting_strategy in c("CD45+","CD235a-")) {
if (sorting_strategy=="CD45+" & sampletype=="Femur") {next}
all_patients[[sampletype]][[disease_status]][[sorting_strategy]] <- unique(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,"Patient_ID"])
# total_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient")]))
# group_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient","cell_type_groups")]))
# cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient",colnames(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy))[6])]))
total_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID")]))
group_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID","cell_type_groups")]))
cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID",colnames(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy))[6])]))
colnames(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]])[2] <- 'cluster'
cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- merge(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],cluster_to_label_mapping[[sampletype]][[disease_status]],by="cluster")
# cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_cluster_percentages(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],group_counts[[sampletype]][[disease_status]][[sorting_strategy]])
cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_percentages(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],total_counts[[sampletype]][[disease_status]][[sorting_strategy]])
cluster_matrix[[sampletype]][[disease_status]][[sorting_strategy]] <- reshape2::dcast(cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]],Patient_ID~cluster,value.var="Freq",drop=FALSE)
group_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_percentages(group_counts[[sampletype]][[disease_status]][[sorting_strategy]],total_counts[[sampletype]][[disease_status]][[sorting_strategy]])
group_matrix[[sampletype]][[disease_status]][[sorting_strategy]] <- reshape2::dcast(group_percentages[[sampletype]][[disease_status]][[sorting_strategy]],Patient_ID~cell_type_groups,value.var="Freq",drop=FALSE)
}
}
}
library(data.table)
library(ggplot2)
x=2.4
per_fetus=FALSE
# 1: read in metadata that contains PCW
# 2: identify cell type composition of each sample
for_cellComp <- fread("~/Documents/Research/t21-proj/out/etc/for_cellComp.csv",data.table = F,stringsAsFactors = F)
if (per_fetus) {
for_cellComp$`Patient ID` <- for_cellComp$Patient
}
convert_to_percentages <- function(counts,total_counts) {
for (patient.uniq in unique(counts$Patient_ID)) {
total_num_cells <- subset(total_counts,Var1==patient.uniq)$Freq
counts$Freq[counts$Patient_ID==patient.uniq] <- counts$Freq[counts$Patient_ID==patient.uniq]/total_num_cells
}
return(counts)
}
convert_to_cluster_percentages <- function(counts,total_counts) {
for (patient.uniq in unique(counts$Patient_ID)) {
for (broad_cell in unique(counts$cell_type_groups)) {
total_num_cells <- subset(total_counts,Patient_ID==patient.uniq & cell_type_groups==broad_cell)$Freq
counts$Freq[counts$Patient_ID==patient.uniq & counts$cell_type_groups==broad_cell] <- counts$Freq[counts$Patient_ID==patient.uniq & counts$cell_type_groups==broad_cell]/total_num_cells
}
}
return(counts)
}
total_counts <- list()
group_counts <- list()
group_percentages <- list()
group_matrix <- list()
cluster_counts <- list()
cluster_percentages <- list()
cluster_matrix <- list()
df <- list()
cluster_to_label_mapping <- list()
all_patients <- list()
for (sampletype in c("Femur","Liver")) {
cluster_counts[[sampletype]] <- list()
cluster_percentages[[sampletype]] <- list()
cluster_matrix[[sampletype]] <- list()
group_counts[[sampletype]] <- list()
group_percentages[[sampletype]] <- list()
group_matrix[[sampletype]] <- list()
total_counts[[sampletype]] <- list()
df[[sampletype]] <- list()
all_patients[[sampletype]] <- list()
cluster_to_label_mapping[[sampletype]] <- list()
for (disease_status in c("DownSyndrome","Healthy")) {
cluster_counts[[sampletype]][[disease_status]] <- list()
cluster_percentages[[sampletype]][[disease_status]] <- list()
cluster_matrix[[sampletype]][[disease_status]] <- list()
group_counts[[sampletype]][[disease_status]] <- list()
group_percentages[[sampletype]][[disease_status]] <- list()
group_matrix[[sampletype]][[disease_status]] <- list()
total_counts[[sampletype]][[disease_status]] <- list()
cluster_to_label_mapping[[sampletype]][[disease_status]] <- fread(paste0("~/Documents/Research/t21-proj/out/full/cluster_to_label_mapping/10X_",disease_status,"_",sampletype,".cluster_to_label_mapping.csv"),data.table = F,stringsAsFactors = F)[,c(3,4)]
colnames(cluster_to_label_mapping[[sampletype]][[disease_status]])[1] <- 'cluster'
df[[sampletype]][[disease_status]] <- fread(paste0("~/Documents/Research/t21-proj/out/full/cellComp/10X_",disease_status,"_",sampletype,".cellComp.csv"),data.table = F,stringsAsFactors = F)
df[[sampletype]][[disease_status]]$Patient_ID <- paste(df[[sampletype]][[disease_status]]$patient,df[[sampletype]][[disease_status]]$sample,sep=" ")
if (per_fetus) {
df[[sampletype]][[disease_status]]$Patient_ID <- df[[sampletype]][[disease_status]]$patient
}
df[[sampletype]][[disease_status]] <- subset(df[[sampletype]][[disease_status]],Patient_ID %in% for_cellComp[,"Patient ID"])
df[[sampletype]][[disease_status]] <- subset(df[[sampletype]][[disease_status]],cell_type_groups != "Unknown")
all_patients[[sampletype]][[disease_status]] <- list()
for (sorting_strategy in c("CD45+","CD235a-")) {
if (sorting_strategy=="CD45+" & sampletype=="Femur") {next}
all_patients[[sampletype]][[disease_status]][[sorting_strategy]] <- unique(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,"Patient_ID"])
# total_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient")]))
# group_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient","cell_type_groups")]))
# cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("patient",colnames(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy))[6])]))
total_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID")]))
group_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID","cell_type_groups")]))
cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- as.data.frame(table(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy)[,c("Patient_ID",colnames(subset(df[[sampletype]][[disease_status]],sorting==sorting_strategy))[6])]))
colnames(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]])[2] <- 'cluster'
cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]] <- merge(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],cluster_to_label_mapping[[sampletype]][[disease_status]],by="cluster")
# cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_cluster_percentages(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],group_counts[[sampletype]][[disease_status]][[sorting_strategy]])
cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_percentages(cluster_counts[[sampletype]][[disease_status]][[sorting_strategy]],total_counts[[sampletype]][[disease_status]][[sorting_strategy]])
cluster_matrix[[sampletype]][[disease_status]][[sorting_strategy]] <- reshape2::dcast(cluster_percentages[[sampletype]][[disease_status]][[sorting_strategy]],Patient_ID~cluster,value.var="Freq",drop=FALSE)
group_percentages[[sampletype]][[disease_status]][[sorting_strategy]] <- convert_to_percentages(group_counts[[sampletype]][[disease_status]][[sorting_strategy]],total_counts[[sampletype]][[disease_status]][[sorting_strategy]])
group_matrix[[sampletype]][[disease_status]][[sorting_strategy]] <- reshape2::dcast(group_percentages[[sampletype]][[disease_status]][[sorting_strategy]],Patient_ID~cell_type_groups,value.var="Freq",drop=FALSE)
}
}
}
sampletype="Liver"
disease_status="Healthy"
sorting_strategy="CD45+"
df1=group_matrix[[sampletype]][[disease_status]][[sorting_strategy]]
# df1$disease_status = disease_status
disease_status="DownSyndrome"
df2=group_matrix[[sampletype]][[disease_status]][[sorting_strategy]]
# df2$disease_status = disease_status
df.mg = merge(for_cellComp,rbind(df1,df2),by.x='Patient ID',by.y="Patient_ID")
df.mg$AgeNum = as.numeric(substring(df.mg$Age,1,2))
cell_vec=colnames(df.mg)[7:14]
g=list();tmp=list()
gall = lapply(1:length(cell_vec),function(i) {
# for (i in 1:length(cell_vec)) {
cell_type = cell_vec[i]
tmp[[i]] = df.mg[,c("AgeNum","Age",cell_type)]
g = ggplot(tmp[[i]],aes(x=as.factor(AgeNum),y=tmp[[i]][,cell_type],fill=Age)) + geom_boxplot() + geom_point() + geom_smooth(method='lm') +
theme_bw() + theme(panel.grid = element_blank()) +
labs(y=paste0(cell_type," (%)"),x="Age (PCW)") +
scale_fill_brewer(palette="Set2") +guides(fill="none")
return(g)
}
)
for (i in 1:length(cell_vec)) {
cell_type = cell_vec[i]
tmp[[i]] = df.mg[,c("AgeNum","Age",cell_type)]
# print(kruskal.test(tmp[[i]]$Age,tmp[[i]][,cell_type]))
# print(wilcox.test(tmp[[i]][,cell_type][tmp[[i]]$AgeNum==12],
#                   tmp[[i]][,cell_type][tmp[[i]]$AgeNum!=12]))
print(cor.test(tmp[[i]]$AgeNum,tmp[[i]][,cell_type]))
}
library(cowplot)
plot_grid(plotlist=gall,nrow=2,ncol=4)
# dggpubr::ggarrange(g)
# plot_grid(g,nrow = 2,ncol = 4)
plot_grid(plotlist=gall,nrow=2,ncol=4)
pdf("~/Downloads/age_pcw.pdf",width = 11,height=5)
plot_grid(plotlist=gall,nrow=2,ncol=4)
pdf("~/Downloads/age_pcw.pdf",width = 11,height=5)
print(plot_grid(plotlist=gall,nrow=2,ncol=4))
dev.off()
pdf("~/Downloads/age_pcw.pdf",width = 11,height=6.5)
print(plot_grid(plotlist=gall,nrow=2,ncol=4))
dev.off()
pdf("~/Downloads/age_pcw.pdf",width = 11,height=5.5)
print(plot_grid(plotlist=gall,nrow=2,ncol=4))
dev.off()
