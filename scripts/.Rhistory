subset(HSC,names=="IGF1")
subset(HSC,names=="IGF2")
subset(HSC,names=="IGF1")
subset(HSC,names=="IGF")
subset(HSC,names=="IGF1R")
subset(df,names=="GATA1")
cell_types = c("")
df = readRDS("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.Liver.lfc.rds")[[1]]
subset(df,names=="GATA1")
library(data.table)
HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
col_to_use="logFC"
df.mg = merge(HSC[,c("names",col_to_use)],
MEMP[,c("names",col_to_use)],
by="names",all = TRUE)
colnames(df.mg)[2:3] = c("HSC","MEMP")
df.mg = merge(df.mg,EarlyEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "EarlyEry"
df.mg = merge(df.mg,LateEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "LateEry"
df.mg = merge(df.mg,Megakary[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "Megakary"
subset(df.mg,names=="GATA1")
Mast = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Mast cells.sample.txt",data.table = F,stringsAsFactors = F)
subset(Mast,names=="GATA1")
subset(df.mg,names=="RUNX1")
subset(df.mg,names=="SOD2")
subset(df.mg,names=="SOD1")
subset(df,names=="SOD2")
subset(df,names=="SOD1")
oxidative_stress_genes <- c(
"SOD1", "SOD2", "CAT", "GPX1", "GPX4",
"GSTP1", "NFE2L2", "HMOX1", "NQO1", "GSR",
"TXN", "TXNRD1", "TXNRD2", "PRDX1", "PRDX2",
"PRDX3", "PRDX4", "PRDX5", "PRDX6", "GCLC",
"GCLM", "GLRX", "GLRX2", "GSS", "MGST1",
"MGST3", "MGST2", "ALDH2", "ALDH3A1", "ALDH9A1",
"ALOX5", "ALOX15", "ALOX12", "ALOXE3", "NRF1",
"NRF2", "NRF3", "KEAP1", "ARE", "HO-1",
"G6PD", "PRMT1", "NOS1", "NOS2", "NOS3",
"PRDX1", "PRDX2", "PRDX3", "PRDX4", "PRDX5"
)
subset(df,names %in% oxidative_stress_genes)
dfall = readRDS("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.Liver.p.rds")[[1]]
df=dfall
oxidative_stress_genes <- c(
"SOD1", "SOD2", "CAT", "GPX1", "GPX4",
"GSTP1", "NFE2L2", "HMOX1", "NQO1", "GSR",
"TXN", "TXNRD1", "TXNRD2", "PRDX1", "PRDX2",
"PRDX3", "PRDX4", "PRDX5", "PRDX6", "GCLC",
"GCLM", "GLRX", "GLRX2", "GSS", "MGST1",
"MGST3", "MGST2", "ALDH2", "ALDH3A1", "ALDH9A1",
"ALOX5", "ALOX15", "ALOX12", "ALOXE3", "NRF1",
"NRF2", "NRF3", "KEAP1", "ARE", "HO-1",
"G6PD", "PRMT1", "NOS1", "NOS2", "NOS3",
"PRDX1", "PRDX2", "PRDX3", "PRDX4", "PRDX5"
)
subset(df,names %in% oxidative_stress_genes)
head(HSCs)
subset(HSC,names=="SOD1")
subset(df.mg,names=="SOD1")
subset(Megakary,names=="SOD1")
subset(df,names=="SOD1")
subset(df,names=="RUNX1")
subset(df,names=="GATA1")
HSC[1,]
library(data.table)
HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
Mast = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Mast cells.sample.txt",data.table = F,stringsAsFactors = F)
# subset(Mast,names=="GATA1")
# HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
# MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
# EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
# LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
# Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
# col_to_use="logFC"
col_to_use="P.Value"
df.mg = merge(HSC[,c("names",col_to_use)],
MEMP[,c("names",col_to_use)],
by="names",all = TRUE)
colnames(df.mg)[2:3] = c("HSC","MEMP")
df.mg = merge(df.mg,EarlyEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "EarlyEry"
df.mg = merge(df.mg,LateEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "LateEry"
df.mg = merge(df.mg,Megakary[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "Megakary"
subset(df.mg,names=="GATA1")
subset(df.mg,names=="SOD1")
head(HSCs)
head(HSC)
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="GO Term")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="Cell type",y="GO Term")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="Cell type",y="GO Term") +
guides(fill="none")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="GO Term",y="Cell type") +
guides(fill="none")
head(res.df)
head(y)
library(data.table)
library(enrichR)
cell_type = "HSCs_MPPs"
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC > 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=character(),Adjusted.P.value=character(),Genes=character())
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
library(data.table)
library(enrichR)
cell_type = "HSCs_MPPs"
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC > 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=y$P.value,Adjusted.P.value=y$Adjusted.P.value,Genes=y$Genes)
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
res.df = as.data.frame(do.call(rbind,res.lst))
head(res.df)
f.out = paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.txt")
fwrite(res.df,f.out,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
head ~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.txt
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC < 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=y$P.value,Adjusted.P.value=y$Adjusted.P.value,Genes=y$Genes)
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
res.df = as.data.frame(do.call(rbind,res.lst))
head(res.df)
subset(HSCs,names=="HLA-DPB1")
subset(HSC,names=="HLA-DPB1")
subset(df.mg,names=="HLA-DPB1")
f.out = paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.down.txt")
fwrite(res.df,f.out,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
library(data.table)
library(reshape2)
meta = fread("~/Downloads/celltype_align.csv",data.table = F,stringsAsFactors = F)
cormat = fread("~/Downloads/CorrMat.public_vs_ours.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Public"
cormelt1 = subset(cormelt,id %in% paste(meta$Public,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disomySections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Disomy"
cormelt2 = subset(cormelt,id %in% paste(meta$Disomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.t21Sections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Trisomy"
cormelt3 = subset(cormelt,id %in% paste(meta$Trisomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disjoint_disomy_sample_sets.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "DisomySep"
cormelt4 = subset(cormelt,id %in% paste(meta$Disomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disjoint_t21_sample_sets.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "TrisomySep"
cormelt5 = subset(cormelt,id %in% paste(meta$Trisomy,meta$Trisomy))
cormat = fread("~/Downloads/CorrMat.allSections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Trisomy_v_Disomy.all"
cormelt6 = subset(cormelt,id %in% paste(meta$Disomy,meta$Trisomy))
res = merge(merge(cormelt2,cormelt3,by='column',all = T),cormelt1,by="column",all = T)
t.test(res$Public,res$Disomy)
t.test(res$Disomy,res$Trisomy)
ggplot(res,aes())
boxplot_data <- data.frame(
Group = rep(c("Disomy", "Trisomy"), each = length(res$Disomy)),
Value = c(res$Disomy, res$Trisomy)
)
# Create boxplot
library(ggplot2)
boxplot <- ggplot(boxplot_data, aes(x = Group, y = Value, fill = Group)) +
geom_boxplot() +
labs(title = "",
x = "Sections",
y = "Correlations") +
ggpubr::theme_pubr() +
guides(fill="none")
pdf(paste0("~/Documents/Research/t21-proj/out/full/visium_plots/","disomy_v_trisomy",".pdf"),width = 6,height=5)
print(boxplot)
dev.off()
library(edgeR)
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
x = fread(f,data.table = F,stringsAsFactors = F)
rownames(x)=x[,1];x=x[,-1]
x = cpm(x)
library(data.table)
library(edgeR)
library(data.table)
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
x = fread(f,data.table = F,stringsAsFactors = F)
rownames(x)=x[,1];x=x[,-1]
x = cpm(x)
result_generate=function() {
keep = apply(x,1,function(x){mean(x>TPM) > PROP})
genes_to_keep = rownames(x)[keep]
tmp = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep)
tab = table(tmp$cre,tmp$genotype)
k=tab[2,2];n=tab[1,2]+tab[2,2];p=(tab[2,1])/(tab[2,1]+tab[1,1])
res=binom.test(k,n,p)
out = data.frame(PROP,TPM,
prop_t21=k/n,
prop_d21=p,
l=res$conf.int[1],h=res$conf.int[2],
pval=res$p.value)
return(out)
}
PROP=0.5
TPM=0.2
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
i = 0;glst=list()
pvec=list();tmp1=list();tmp2=list()
set.seed(031995)
for (f in c(
"~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt",
"~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt",
"~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
)) {
i = i+1
x = fread(f,data.table = F,stringsAsFactors = F); rownames(x)=x[,1];x=x[,-1]; x = cpm(x)
print(result_generate())
keep = apply(x,1,function(x){mean(x>TPM) > PROP})
genes_to_keep = rownames(x)[keep]
tmp = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="D21")
bootstrap_func = function(i) {ind = sample(1:nrow(tmp),nrow(tmp),replace = T); tmp2 = tmp[ind,]; sum(tmp2$cre)/nrow(tmp2)}
pvec[[i]] = unlist(lapply(1:10000,bootstrap_func))
tmp1[[i]] = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="T21")
tmp2[[i]] = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="D21")
library(ggplot2)
cat("P-value = ",2*(1-mean((sum(tmp1[[i]]$cre)/nrow(tmp1[[i]])) > pvec[[i]])))
g=ggplot(data.frame(pvec[[i]]),aes(x=pvec[[i]])) + geom_histogram(fill='darkblue',col='white',bins=16) +
# theme_bw() +
ggpubr::theme_pubr() +
theme(panel.grid = element_blank(),plot.title = element_text(hjust=0.5)) +
geom_vline(aes(xintercept = sum(tmp1[[i]]$cre)/nrow(tmp1[[i]]),color='Down Syndrome'),lty='dashed',lwd=2) +
geom_vline(aes(xintercept = sum(tmp2[[i]]$cre)/nrow(tmp2[[i]]),color='Disomic'),lty='dashed',lwd=2) +
labs(x="Empirical bootstrap distribution\nin disomic somatics",
title="",
y='Count') +
scale_color_manual(name = "Observed external somatic set", values = c(`Down Syndrome` = "yellow3", Disomic = "orange")) +
xlim(0.04,0.2)
# data.frame(p=sum(tmp2$cre)/nrow(tmp2),l=quantile(y,probs = 0.025),h=quantile(y,probs = 0.975))
# print(g)
glst[[i]]=g
}
library(data.table)
i=0; df = list()
for (disease_status in c("DownSyndrome","Healthy")) {
for (sampletype in c("Femur","Liver")) {
i=i+1
f=paste0("~/Downloads/10X_",disease_status,"_",sampletype,".cellComp.csv")
# f=paste0("~/Documents/Research/t21-proj/out/full/cellComp/10X_",disease_status,"_",sampletype,".cellComp.csv")
df[[i]]=fread(f,data.table = F,stringsAsFactors = F)
colnames(df[[i]])[6] = "leiden_latest"
df[[i]]$disease=disease_status
df[[i]]$env = sampletype
}
}
df.lst=df
df=as.data.frame(do.call(rbind,df.lst))
df.uniq = unique(df[,c("leiden_latest","cell_type_groups")])
library(data.table)
refmap = fread("~/Downloads/scArches_Healthy_Liver_metadata.csv",data.table = F,stringsAsFactors = F)
refmap$cellname=unlist(lapply(strsplit(refmap$barcode,"-"),function(x) paste(x[1:2],collapse = "-")))
refmap$patient_sample = paste0(refmap$patient," ",refmap$sample)
refmap_t21 = fread("~/Downloads/Healthy_liver_annotations.txt",data.table = F,stringsAsFactors = F)
refmap_t21 = refmap_t21[,c(1:2,5:6)]
refmap_t21 = merge(refmap[,c("patient","sample","cellname","patient_sample")],refmap_t21,by=c("sample","cellname"))
refmap_broad = fread("~/Downloads/ref_broad_map.csv",data.table = F,stringsAsFactors = F)
refmap = merge(refmap_t21,refmap_broad,by.x="Popescu_transfer",by.y="Predicted")
refmap_broad_t21 = fread("~/Downloads/t21_transfer.broad.csv",data.table = F,stringsAsFactors = F)
refmap = merge(refmap,refmap_broad_t21,by.x="T21_transfer",by.y="T21_transfer")
dataf = fread("~/Downloads/a3_tab.obs.withannot.csv",data.table = F,stringsAsFactors = F)
dataf.scvi = fread("~/Downloads/b3_tab.obs.withannot.csv",data.table = F,stringsAsFactors = F)
dataf = merge(dataf,dataf.scvi[,c("barcodekey","combi_annot_v3")],by="barcodekey")
dataf2 = merge(dataf,df.uniq,by="leiden_latest",all.x=TRUE)
dataf2$cellname=unlist(lapply(strsplit(dataf2$barcodekey,"-"),function(x) paste(x[1:2],collapse = "-")))
df$cellname=unlist(lapply(strsplit(df$V1,"-"),function(x) paste(x[1:2],collapse = "-")))
df$patient_sample = paste0(df$patient," ",df$sample)
dataf3 = merge(dataf2,df[,c("cellname","patient_sample","sorting")],by=c("cellname","patient_sample"),all.x=TRUE)
library(data.table)
new_annot_mapping = fread("~/Downloads/new_annot_mapping.csv",data.table = F,stringsAsFactors = F)
dataf3 = merge(dataf3,new_annot_mapping,by="combi_annot",all.x=TRUE)
new_annot_mapping_scvi = fread("~/Downloads/new_annot_mapping.scvi.csv",data.table = F,stringsAsFactors = F)
colnames(new_annot_mapping_scvi)[2] = "broad_annot_scvi"
dataf3 = merge(dataf3,new_annot_mapping_scvi,by="combi_annot_v3",all.x=TRUE)
dataf3.old = dataf3
rm(dataf2)
rm(df)
rm(dataf)
rm(dataf.scvi)
dataf4=merge(dataf3,refmap,by=c("patient_sample","cellname"),all.x=TRUE)
dataf4.full = dataf4
dataf4 = subset(dataf4.full,Organ=="Liver" & DiseaseStatus=="Healthy" )#& broad_annot != "Stroma" & cell_type_groups !="Stroma" & broad_annot_scvi!="Stroma")
dataf4[dataf4=="Stroma"] = NA
keepers = read.table(text="Patient ID	Patient	Tissue	Organ	Sorting strategy	Age
15532 T21 15532 A	15532	Down Syndrome	Liver	CD45+	14 pcw
15532 T21 15532 B	15532	Down Syndrome	Liver	CD45+	14 pcw
15559 T21 15559 B	15559	Down Syndrome	Liver	CD45+	12 pcw
15559 T21 15559 C	15559	Down Syndrome	Liver	CD45+	12 pcw
15582 T21 15582 B	15582	Down Syndrome	Liver	CD45+	13 pcw
15646 15646B	15646	Down Syndrome	Liver	CD45+	13 pcw
15669 15669H	15669	Down Syndrome	Liver	CD45+	14 pcw
15712 15712A	15712	Down Syndrome	Liver	CD45+	12 pcw
15724 15724C	15724	Down Syndrome	Liver	CD45+	13 pcw
15734 L15734A	15734	Down Syndrome	Liver	CD45+	14 pcw
15633 L15633B	15633	Healthy	Liver	CD45+	14 pcw
15657 L15657A	15657	Healthy	Liver	CD45+	12 pcw
15781 L15781D	15781	Healthy	Liver	CD45+	13 pcw",sep="\t",header=T)
# dataf3 = subset(dataf3.old,sorting=="CD45+")
dataf3 = subset(dataf4,sorting=="CD45+" & patient_sample %in% keepers$Patient.ID)
# tab = aggregate(dataf4.keep$combi_clust,by=list(annot=dataf4.keep$Ref_Broad,organ=dataf4.keep$Organ,disease=dataf4.keep$DiseaseStatus,patient_sample=dataf4.keep$patient_sample),length)
# library(dplyr)
# tab <- tab %>%
#   group_by(organ, disease,patient_sample) %>%
#   mutate(prop = x / sum(x))
# tab = as.data.frame(tab)
# colnames(tab)[4:5]=paste0(c("N","Prop"),"_refmap")
# tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus),length)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$T21Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
tab2 = aggregate(dataf3$combi_annot,by=list(annot=dataf3$cell_type_groups,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab2
# tab.mg = merge(tab,tab2,by=c("annot","organ","disease"))
# colnames(tab.mg)[4:7] = c("N.int","prop.int","N.sep","prop.sep")
tab.mg = merge(tab,tab2,by=c("annot","organ","disease","patient_sample"))
colnames(tab.mg)[5:8] = c("N.t21","prop.t21","N.sep","prop.sep")
tab.mg$organ_disease = paste0(tab.mg$organ," ",tab.mg$disease)
tab = aggregate(dataf3$combi_annot,by=list(annot=dataf3$Ref_Broad,organ=dataf3$Organ,disease=dataf3$DiseaseStatus,patient_sample=dataf3$patient_sample),length)
library(dplyr)
tab <- tab %>%
group_by(organ, disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab = as.data.frame(tab)
colnames(tab)[5:6] = c("N.pulpescu","prop.pulpescu")
tab.mg = merge(tab.mg,tab,by=c("annot","organ","disease","patient_sample"))
library(ggplot2)
g1=ggplot(tab.mg,aes(x=prop.sep,y=prop.t21,col=annot)) + #,fill=disease)) +
geom_abline(slope=1,intercept=0,lty='dashed') +
geom_point(size=rel(3)) +
# scale_shape_manual(values = c(1,16,2,17),label=c("Ts21","Disomic")) +
scale_fill_manual(values = c("white", "black")) +
theme_bw() +
# ggpubr::theme_pubr() +
theme(panel.grid = element_blank()) +
labs(x="Separate",y="Reference mapping (Ts21)",shape="Sample Type",col="Cell type") +
scale_color_brewer(palette="Set2"); g1
g1
tab.mg
19323/(19323+18120)
19323/(19323+18120+16408)
library(data.table)
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
df = fread(f,data.table = F,stringsAsFactors = F)
# fwrite(data.frame(unique(df$subclust_v6)),"~/Downloads/multiome_annot.csv",quote = F)
annot = fread("~/Downloads/multiome_annot.csv",data.table = F,stringsAsFactors = F)
df = merge(df,annot,by="subclust_v6")
tab2 = aggregate(df$subclust_v6,by=list(annot=df$broad,disease=df$disease,patient_sample=df$dataset),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
library(data.table)
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
df = fread(f,data.table = F,stringsAsFactors = F)
# fwrite(data.frame(unique(df$subclust_v6)),"~/Downloads/multiome_annot.csv",quote = F)
annot = fread("~/Downloads/multiome_annot.csv",data.table = F,stringsAsFactors = F)
df = merge(df,annot,by="subclust_v6")
tab2 = aggregate(df$subclust_v6,by=list(annot=df$broad,disease=df$disease,patient_sample=df$dataset),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
# tab2
library(data.table)
f="/Users/andrewmarderstein/Documents/Research/t21_multiome/output/data/Multiome.RNA_ATAC.meta.txt"
df = fread(f,data.table = F,stringsAsFactors = F)
# fwrite(data.frame(unique(df$subclust_v6)),"~/Downloads/multiome_annot.csv",quote = F)
annot = fread("~/Downloads/multiome_annot.csv",data.table = F,stringsAsFactors = F)
df = merge(df,annot,by="subclust_v6")
tab2 = aggregate(df$subclust_v6,by=list(annot=df$broad,disease=df$disease,patient_sample=df$dataset),length)
library(dplyr)
tab2 <- tab2 %>%
group_by(disease,patient_sample) %>%
mutate(prop = x / sum(x))
tab2 = as.data.frame(tab2)
library(ggplot2)
tab2$annot = factor(tab2$annot,levels=c("HSC/Progenitors", "Erythroid", "Mast cells", "Megakaryocytes", "B cells", "NK/T cells", "Myeloid", "Stroma"))
library(dplyr)
tab2$disease = recode(tab2$disease,"H" = "Disomic", "T21" = "Ts21")
g=ggplot(tab2,aes(x=disease,y=prop,fill=disease)) +
# geom_violin() +
geom_boxplot(outlier.shape = NA) +
geom_point() +
facet_grid(cols=vars(annot)) + ggpubr::theme_pubr()  +
scale_fill_brewer(palette="Set2") + guides(fill="none") +
labs(y="Cell proportions",x="Trisomy status")
g
pdf("~/Downloads/multiome_prop.pdf",width=13,height=6)
print(g)
dev.off()
