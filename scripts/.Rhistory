# aggre2 = merge(aggregate(values~Cell_type+Status,data=df,mean),
#                aggregate(values~Cell_type+Status,data=df,function(x) sd(x)/sqrt(length(x))),
#                by=c("Cell_type","Status"))
colnames(aggre2)[3:4] = c("mu","se")
aggre2$l = aggre2$mu - 1.96*aggre2$se
aggre2$h = aggre2$mu + 1.96*aggre2$se
aggre2$Cell_type[aggre2$Cell_type == "CD38neg"] = "CD38-"
aggre2$Cell_type[aggre2$Cell_type == "CD38pos"] = "CD38+"
aggre2$Cell_type[aggre2$Cell_type == "Linpos"] = "Lin+"
aggre2$Cell_type = factor(aggre2$Cell_type,levels=c("HSC","CD38-","CD38+","Lin+"))
g = ggplot(aggre2,aes(x=Status,y=mu,fill=Status)) +
geom_bar(stat='identity',col='black') +
geom_pointrange(aes(ymin=l,ymax=h)) +
facet_grid(cols=vars(Cell_type)) +
ggpubr::theme_pubr() + labs(y=y_label,x='Trisomy status') +
scale_fill_brewer(palette="Set2") + guides(fill="none")
g
library(data.table)
library(glmmTMB)
library(dplyr)
library(ggplot2)
df = fread("~/Downloads/mtg_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitotracker_results.txt"
pdf.out = "~/Downloads/mitotracker_results.v3.pdf"
y_label = "MitoTracker"
# df = fread("~/Downloads/mitosox_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
# f.out = "~/Downloads/mitosox_results.txt"
# pdf.out = "~/Downloads/mitosox_results.v3.pdf"
# y_label = "MitoSOX"
df$values = df[,1]
df$Sample = as.factor(df$Sample)
df$Status = recode(df$Status,"Healthy" = "Disomic", "DS" = "Ts21")
df = subset(df,!(Cell_type %in% "FLHSC"))
cell.uniq = unique(df$Cell_type)
res.lst=list()
# aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
# library(ggplot2)
# g = ggplot(aggre,aes(x=Status,y=x,fill=Status)) +
#   geom_violin() +
#   geom_point() + facet_grid(cols=vars(Cell_type)) +
#   ggpubr::theme_pubr() + labs(y=y_label,x='Trisomy status') +
#   scale_fill_brewer(palette="Set2") + guides(fill="none")
# pdf(pdf.out,width=9,height=4)
# print(g)
# dev.off()
aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
aggre=as.data.frame(aggre)
aggre2 = merge(aggregate(values~Cell_type+Status+Sample,data=df,mean),
aggregate(values~Cell_type+Status+Sample,data=df,function(x) sd(x)/sqrt(length(x))),
by=c("Cell_type","Status","Sample"))
# aggre2 = merge(aggregate(values~Cell_type+Status,data=df,mean),
#                aggregate(values~Cell_type+Status,data=df,function(x) sd(x)/sqrt(length(x))),
#                by=c("Cell_type","Status"))
colnames(aggre2)[4:5] = c("mu","se")
aggre2$l = aggre2$mu - 1.96*aggre2$se
aggre2$h = aggre2$mu + 1.96*aggre2$se
aggre2$Cell_type[aggre2$Cell_type == "CD38neg"] = "CD38-"
aggre2$Cell_type[aggre2$Cell_type == "CD38pos"] = "CD38+"
aggre2$Cell_type[aggre2$Cell_type == "Linpos"] = "Lin+"
aggre2$Cell_type = factor(aggre2$Cell_type,levels=c("HSC","CD38-","CD38+","Lin+"))
# Summarize data to get the mean mu for each Status and Cell_type
mean_mu <- aggre2 %>%
group_by(Cell_type, Status) %>%
summarize(mean_mu = mean(mu), .groups = 'drop')
# Create the ggplot
g <- ggplot() +
# Add the bars for mean mu values
geom_bar(data = mean_mu, aes(x = Status, y = mean_mu, fill = Status),
stat = 'identity', color = 'black', position = position_dodge(width = 1)) +
# Add the individual points for each mu value
geom_point(data = aggre2, aes(x = Status, y = mu),
position = position_dodge(width = 1), color = 'black') +
# Facet by Cell_type
facet_grid(cols = vars(Cell_type)) +
# Apply the theme
ggpubr::theme_pubr() +
# Label the axes
labs(y = y_label, x = "Trisomy status") +
# Use the Set2 palette
scale_fill_brewer(palette = "Set2") +
# Remove the legend for fill
guides(fill = "none")
# Print the plot
print(g)
library(data.table)
library(glmmTMB)
library(dplyr)
library(ggplot2)
df = fread("~/Downloads/mtg_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitotracker_results.txt"
pdf.out = "~/Downloads/mitotracker_results.v3.pdf"
y_label = "MitoTracker"
# df = fread("~/Downloads/mitosox_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
# f.out = "~/Downloads/mitosox_results.txt"
# pdf.out = "~/Downloads/mitosox_results.v3.pdf"
# y_label = "MitoSOX"
df$values = df[,1]
df$Sample = as.factor(df$Sample)
df$Status = recode(df$Status,"Healthy" = "Disomic", "DS" = "Ts21")
df = subset(df,!(Cell_type %in% "FLHSC"))
cell.uniq = unique(df$Cell_type)
res.lst=list()
# aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
# library(ggplot2)
# g = ggplot(aggre,aes(x=Status,y=x,fill=Status)) +
#   geom_violin() +
#   geom_point() + facet_grid(cols=vars(Cell_type)) +
#   ggpubr::theme_pubr() + labs(y=y_label,x='Trisomy status') +
#   scale_fill_brewer(palette="Set2") + guides(fill="none")
# pdf(pdf.out,width=9,height=4)
# print(g)
# dev.off()
aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
aggre=as.data.frame(aggre)
aggre2 = merge(aggregate(values~Cell_type+Status+Sample,data=df,mean),
aggregate(values~Cell_type+Status+Sample,data=df,function(x) sd(x)/sqrt(length(x))),
by=c("Cell_type","Status","Sample"))
# aggre2 = merge(aggregate(values~Cell_type+Status,data=df,mean),
#                aggregate(values~Cell_type+Status,data=df,function(x) sd(x)/sqrt(length(x))),
#                by=c("Cell_type","Status"))
colnames(aggre2)[4:5] = c("mu","se")
aggre2$l = aggre2$mu - 1.96*aggre2$se
aggre2$h = aggre2$mu + 1.96*aggre2$se
aggre2$Cell_type[aggre2$Cell_type == "CD38neg"] = "CD38-"
aggre2$Cell_type[aggre2$Cell_type == "CD38pos"] = "CD38+"
aggre2$Cell_type[aggre2$Cell_type == "Linpos"] = "Lin+"
aggre2$Cell_type = factor(aggre2$Cell_type,levels=c("HSC","CD38-","CD38+","Lin+"))
# Summarize data to get the mean mu for each Status and Cell_type
mean_mu <- aggre2 %>%
group_by(Cell_type, Status) %>%
summarize(mean_mu = mean(mu), .groups = 'drop')
# Create the ggplot
g <- ggplot() +
# Add the bars for mean mu values
geom_bar(data = mean_mu, aes(x = Status, y = mean_mu, fill = Status),
stat = 'identity', color = 'black', position = position_dodge(width = 1)) +
# Add the individual points for each mu value
geom_point(data = aggre2, aes(x = Status, y = mu),
position = position_dodge(width = 1), color = 'black') +
# Facet by Cell_type
facet_grid(cols = vars(Cell_type)) +
# Apply the theme
ggpubr::theme_pubr() +
# Label the axes
labs(y = y_label, x = "Trisomy status") +
# Use the Set2 palette
scale_fill_brewer(palette = "Set2") +
# Remove the legend for fill
guides(fill = "none")
# Print the plot
print(g)
pdf(pdf.out,width=9,height=4)
print(g)
dev.off()
library(data.table)
library(glmmTMB)
library(dplyr)
library(ggplot2)
df = fread("~/Downloads/mtg_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitotracker_results.txt"
pdf.out = "~/Downloads/mitotracker_results.v3.pdf"
y_label = "MitoTracker"
df = fread("~/Downloads/mitosox_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitosox_results.txt"
pdf.out = "~/Downloads/mitosox_results.v3.pdf"
y_label = "MitoSOX"
df$values = df[,1]
df$Sample = as.factor(df$Sample)
df$Status = recode(df$Status,"Healthy" = "Disomic", "DS" = "Ts21")
df = subset(df,!(Cell_type %in% "FLHSC"))
cell.uniq = unique(df$Cell_type)
res.lst=list()
# aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
# library(ggplot2)
# g = ggplot(aggre,aes(x=Status,y=x,fill=Status)) +
#   geom_violin() +
#   geom_point() + facet_grid(cols=vars(Cell_type)) +
#   ggpubr::theme_pubr() + labs(y=y_label,x='Trisomy status') +
#   scale_fill_brewer(palette="Set2") + guides(fill="none")
# pdf(pdf.out,width=9,height=4)
# print(g)
# dev.off()
aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
aggre=as.data.frame(aggre)
aggre2 = merge(aggregate(values~Cell_type+Status+Sample,data=df,mean),
aggregate(values~Cell_type+Status+Sample,data=df,function(x) sd(x)/sqrt(length(x))),
by=c("Cell_type","Status","Sample"))
# aggre2 = merge(aggregate(values~Cell_type+Status,data=df,mean),
#                aggregate(values~Cell_type+Status,data=df,function(x) sd(x)/sqrt(length(x))),
#                by=c("Cell_type","Status"))
colnames(aggre2)[4:5] = c("mu","se")
aggre2$l = aggre2$mu - 1.96*aggre2$se
aggre2$h = aggre2$mu + 1.96*aggre2$se
aggre2$Cell_type[aggre2$Cell_type == "CD38neg"] = "CD38-"
aggre2$Cell_type[aggre2$Cell_type == "CD38pos"] = "CD38+"
aggre2$Cell_type[aggre2$Cell_type == "Linpos"] = "Lin+"
aggre2$Cell_type = factor(aggre2$Cell_type,levels=c("HSC","CD38-","CD38+","Lin+"))
# Summarize data to get the mean mu for each Status and Cell_type
mean_mu <- aggre2 %>%
group_by(Cell_type, Status) %>%
summarize(mean_mu = mean(mu), .groups = 'drop')
# Create the ggplot
g <- ggplot() +
# Add the bars for mean mu values
geom_bar(data = mean_mu, aes(x = Status, y = mean_mu, fill = Status),
stat = 'identity', color = 'black', position = position_dodge(width = 1)) +
# Add the individual points for each mu value
geom_point(data = aggre2, aes(x = Status, y = mu),
position = position_dodge(width = 1), color = 'black') +
# Facet by Cell_type
facet_grid(cols = vars(Cell_type)) +
# Apply the theme
ggpubr::theme_pubr() +
# Label the axes
labs(y = y_label, x = "Trisomy status") +
# Use the Set2 palette
scale_fill_brewer(palette = "Set2") +
# Remove the legend for fill
guides(fill = "none")
# Print the plot
print(g)
pdf(pdf.out,width=9,height=4)
print(g)
dev.off()
pdf.out
library(data.table)
library(glmmTMB)
library(dplyr)
library(ggplot2)
df = fread("~/Downloads/mtg_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitotracker_results.txt"
pdf.out = "~/Downloads/mitotracker_results.v3.pdf"
y_label = "MitoTracker"
df = fread("~/Downloads/mitosox_exp_230719_lin.csv",data.table = F,stringsAsFactors = F)
f.out = "~/Downloads/mitosox_results.txt"
pdf.out = "~/Downloads/mitosox_results.v3.pdf"
y_label = "MitoSOX"
df$values = df[,1]
df$Sample = as.factor(df$Sample)
df$Status = recode(df$Status,"Healthy" = "Disomic", "DS" = "Ts21")
df = subset(df,!(Cell_type %in% "FLHSC"))
cell.uniq = unique(df$Cell_type)
res.lst=list()
# aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
# library(ggplot2)
# g = ggplot(aggre,aes(x=Status,y=x,fill=Status)) +
#   geom_violin() +
#   geom_point() + facet_grid(cols=vars(Cell_type)) +
#   ggpubr::theme_pubr() + labs(y=y_label,x='Trisomy status') +
#   scale_fill_brewer(palette="Set2") + guides(fill="none")
# pdf(pdf.out,width=9,height=4)
# print(g)
# dev.off()
aggre = aggregate(df$values,df[,c("Sample","Status","Age","Cell_type")],mean)
aggre=as.data.frame(aggre)
aggre2 = merge(aggregate(values~Cell_type+Status+Sample,data=df,mean),
aggregate(values~Cell_type+Status+Sample,data=df,function(x) sd(x)/sqrt(length(x))),
by=c("Cell_type","Status","Sample"))
# aggre2 = merge(aggregate(values~Cell_type+Status,data=df,mean),
dim(aggre)
dim(df)
table(df$Status)
f="15582 F15582A
15582 F15582C
15593 F15593A
15593 F15593P
15619 15619D
15619 15619E
15619 F15619F
15636 F15636R
15636 F15636B
15646 F15646J
15656 F15656E
15667 F15667C
15667 F15667D
15667 15667M
15669 F15669F
15669 F15669P
15712 15712D
15724 F15724H
15734 F15734L
15734 F15734M
15734 15734V
15744 F15744P
15744 F15744N
15744 15744Z
15532 T21 15532 A
15532 T21 15532 B
15532 T21 15532 C
15532 T21 15532 D
15532 T21 15532 E
15532 L15532M
15559 T21 15559 A
15559 T21 15559 B
15559 T21 15559 C
15562 T21 15562 A
15562 T21 15562 B
15582 T21 15582 A
15582 T21 15582 B
15582 15582E
15582 15582F
15582 15582G
15593 L15593E
15593 L15593F
15593 L15593N
15619 15619A
15619 15619B
15619 15619C
15636 L15636B
15636 L15636C
15636 L15636D
15636 L15636Q
15646 15646A
15646 15646B
15646 L15646H
15656 15656C
15656 15656D
15656 L15656I
15667 15667E
15667 15667F
15667 L15667L
15669 15669G
15669 15669H
15669 L15669N
15712 15712A
15712 15712B
15712 L15712Q
15724 15724C
15724 15724D
15724 L15724T
15734 L15734A
15734 L15734B
15734 15734U
15744 L15744C
15744 L15744D
15744 15744W"
read.table(f)
read.table(text=f)
f="15582 F15582A	Ts21	F
15582 F15582C	Ts21	F
15593 F15593A	Ts21	F
15593 F15593P	Ts21	F
15619 15619D	Ts21	M
15619 15619E	Ts21	M
15619 F15619F	Ts21	M
15636 F15636R	Ts21	M
15636 F15636B	Ts21	M
15646 F15646J	Ts21	F
15656 F15656E	Ts21	M
15667 F15667C	Ts21	F
15667 F15667D	Ts21	F
15667 15667M	Ts21	F
15669 F15669F	Ts21	F
15669 F15669P	Ts21	F
15712 15712D	Ts21	M
15724 F15724H	Ts21	M
15734 F15734L	Ts21	F
15734 F15734M	Ts21	F
15734 15734V	Ts21	F
15744 F15744P	Ts21	F
15744 F15744N	Ts21	F
15744 15744Z	Ts21	F
15532 T21 15532 A	Ts21	F
15532 T21 15532 B	Ts21	F
15532 T21 15532 C	Ts21	F
15532 T21 15532 D	Ts21	F
15532 T21 15532 E	Ts21	F
15532 L15532M	Ts21	F
15559 T21 15559 A	Ts21	M
15559 T21 15559 B	Ts21	M
15559 T21 15559 C	Ts21	M
15562 T21 15562 A	Ts21	M
15562 T21 15562 B	Ts21	M
15582 T21 15582 A	Ts21	F
15582 T21 15582 B	Ts21	F
15582 15582E	Ts21	F
15582 15582F	Ts21	F
15582 15582G	Ts21	F
15593 L15593E	Ts21	F
15593 L15593F	Ts21	F
15593 L15593N	Ts21	F
15619 15619A	Ts21	M
15619 15619B	Ts21	M
15619 15619C	Ts21	M
15636 L15636B	Ts21	M
15636 L15636C	Ts21	M
15636 L15636D	Ts21	M
15636 L15636Q	Ts21	M
15646 15646A	Ts21	F
15646 15646B	Ts21	F
15646 L15646H	Ts21	F
15656 15656C	Ts21	M
15656 15656D	Ts21	M
15656 L15656I	Ts21	M
15667 15667E	Ts21	F
15667 15667F	Ts21	F
15667 L15667L	Ts21	F
15669 15669G	Ts21	F
15669 15669H	Ts21	F
15669 L15669N	Ts21	F
15712 15712A	Ts21	M
15712 15712B	Ts21	M
15712 L15712Q	Ts21	M
15724 15724C	Ts21	M
15724 15724D	Ts21	M
15724 L15724T	Ts21	M
15734 L15734A	Ts21	F
15734 L15734B	Ts21	F
15734 15734U	Ts21	F
15744 L15744C	Ts21	F
15744 L15744D	Ts21	F
15744 15744W	Ts21	F"
read.table(text=f)
f="15582 F15582A
15582 F15582C
15593 F15593A
15593 F15593P
15619 15619D
15619 15619E
15619 F15619F
15636 F15636R
15636 F15636B
15646 F15646J
15656 F15656E
15667 F15667C
15667 F15667D
15667 15667M
15669 F15669F
15669 F15669P
15712 15712D
15724 F15724H
15734 F15734L
15734 F15734M
15734 15734V
15744 F15744P
15744 F15744N
15744 15744Z
15532 T21 15532 A
15532 T21 15532 B
15532 T21 15532 C
15532 T21 15532 D
15532 T21 15532 E
15532 L15532M
15559 T21 15559 A
15559 T21 15559 B
15559 T21 15559 C
15562 T21 15562 A
15562 T21 15562 B
15582 T21 15582 A
15582 T21 15582 B
15582 15582E
15582 15582F
15582 15582G
15593 L15593E
15593 L15593F
15593 L15593N
15619 15619A
15619 15619B
15619 15619C
15636 L15636B
15636 L15636C
15636 L15636D
15636 L15636Q
15646 15646A
15646 15646B
15646 L15646H
15656 15656C
15656 15656D
15656 L15656I
15667 15667E
15667 15667F
15667 L15667L
15669 15669G
15669 15669H
15669 L15669N
15712 15712A
15712 15712B
15712 L15712Q
15724 15724C
15724 15724D
15724 L15724T
15734 L15734A
15734 L15734B
15734 15734U
15744 L15744C
15744 L15744D
15744 15744W"
read.table(text=f)
read.table(text=f)[,1]
unique(read.table(text=f)[,1])
length(unique(read.table(text=f)[,1]))
f="~/Downloads/tmp.csv"
read.table(f)
f="~/Downloads/tmp.csv"
read.table(f)
read.csv(f)
df=read.csv(f)
head(df)
strsplit(df[,1]," ")
lapply(strsplit(df[,1]," "),function(x)x[[1]])
unlist(lapply(strsplit(df[,1]," "),function(x)x[[1]]))
df$id = unlist(lapply(strsplit(df[,1]," "),function(x)x[[1]]))
head(df)
table(df$id,df$Sex)
f="~/Downloads/tmp.csv"
df=read.csv(f)
head(df)
df$id = unlist(lapply(strsplit(df[,1]," "),function(x)x[[1]]))
df = df[!(duplicated(df$id)),]
head(Df)
head(df)
table(df$Sex)
