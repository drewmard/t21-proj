if (write_new_file) {
fwrite(pval.df,paste0(path_to_outputDir,"/",dataType,'/',analysisType,direc_addon,'/mann_whitney.txt'),quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
}
return(pval.df)
}
######################################################################
#
# PERFORM THE STATISTICAL ANALYSIS
#
######################################################################
path_to_outputDir.old <- path_to_outputDir
lookup_table = lookup_table.all[["EC"]]
factor_to_test_to_use="Visit_Number"
i <- meta$Induction_treatment %in% c("PF-06651600 200 mg (Induction)","PF-06651600 70 mg (Induction)","PF-06651600 20 mg (Induction)") & meta$Regime !="Placebo" & meta$EI=="R" & !is.na(meta[,factor_to_test_to_use])
# i <- meta$Induction_treatment %in% c("PF-06651600 200 mg (Induction)") & meta$Regime !="Placebo" & meta$EI=="NR" & !is.na(meta[,factor_to_test_to_use])
pathway_to_use="pathway212"
g1 = create_new_plot(as.data.frame(dat1[i,]),meta[i,],factor_to_test=factor_to_test_to_use,pathway=pathway_to_use)
g1
lookup_table = lookup_table.all[["EC"]]
factor_to_test_to_use="Visit_Number"
i <- meta$Induction_treatment %in% c("PF-06651600 200 mg (Induction)","PF-06651600 70 mg (Induction)","PF-06651600 20 mg (Induction)") & meta$Regime !="Placebo" & meta$EI=="R" & !is.na(meta[,factor_to_test_to_use])
# i <- meta$Induction_treatment %in% c("PF-06651600 200 mg (Induction)") & meta$Regime !="Placebo" & meta$EI=="NR" & !is.na(meta[,factor_to_test_to_use])
pathway_to_use="pathway1150"
g1 = create_new_plot(as.data.frame(dat1[i,]),meta[i,],factor_to_test=factor_to_test_to_use,pathway=pathway_to_use)
pathway_to_use="pathway2784"
g2=create_new_plot(as.data.frame(dat1[i,]),meta[i,],factor_to_test=factor_to_test_to_use,pathway=pathway_to_use)
pathway_to_use="pathway843"
g3 = create_new_plot(as.data.frame(dat1[i,]),meta[i,],factor_to_test=factor_to_test_to_use,pathway=pathway_to_use)
library(cowplot)
plot_grid(g1,g2,g3,ncol=3)
metadata_to_use$environment
metadata_to_use$environment
library(data.table)
library(data.table)
?ks.test
?rpoisson
?rpois
X=500
Y=400
X=400
Y=500
qpois(400,500)
qpois(500,400)
qpois(4,5)
qpois(.4,5)
dpois(400,500)
ppois(400,500)
ppois(500,500)
ppois(501,500)
ppois(510,500)
ppois(1510,500)
ppois(500,500)
rpois(1000,500)
mean(500 > rpois(1000,500))
mean(500 > rpois(1000,500))
mean(500 > rpois(1000,500))
mean(500 > rpois(1000,500))
mean(500 > rpois(1000,500))
mean(500 > rpois(1000,500))
library(data.table)
library(ggplot2)
library(cowplot)
library(reshape2)
df1.full.p <- fread("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names_downsamp/DownSyndrome.HSCs_MPPs.sample.permALL.p.txt",data.table = F,stringsAsFactors = F)
df1.full.fdr <- fread("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names_downsamp/DownSyndrome.HSCs_MPPs.sample.permALL.fdr.txt",data.table = F,stringsAsFactors = F)
df1.full.lfc <- fread("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names_downsamp/DownSyndrome.HSCs_MPPs.sample.permALL.lfc.txt",data.table = F,stringsAsFactors = F)
gene_names="GATA1"
gene_names="APOC1"
gene_names=c("GATA1","APOC1","MYL4","DANT2","CERS5")
glist <- list(); dflst <- list()
M=100
df1.full.p$medP <- apply(df1.full.p[,paste0("sim",1:M)],1,median)
df1.full.p$adj.P.Val.t21 <- df1.full.fdr$adj.P.Val.t21
df1.full.p$adj.P.Val.h <- df1.full.fdr$adj.P.Val.h
df1.full.p$class <- "none"
df1.full.p$class[df1.full.p$adj.P.Val.t21 < 0.05 | df1.full.p$adj.P.Val.h < 0.05] <- "unknown"
df1.full.p$class[df1.full.p$adj.P.Val.t21 < 0.05 & df1.full.p$P.Value.h < 0.05] <- "environment-driven"
df1.full.p$class[df1.full.p$adj.P.Val.h < 0.05 & df1.full.p$P.Value.t21 < 0.05] <- "environment-driven"
df1.full.p$class[df1.full.p$adj.P.Val.t21 < 0.05 & df1.full.p$medP < 0.05 & df1.full.p$P.Value.h >= 0.05] <- "t21-induced"
df1.full.p$class[df1.full.p$adj.P.Val.h < 0.05 & df1.full.p$P.Value.t21 >= 0.05] <- "t21-reverted"
table(df1.full.p$class)
table(subset(df1.full.p,adj.P.Val.t21<0.05)$class)
table(subset(df1.full.p,adj.P.Val.h<0.05)$class)
tab <- table(subset(df1.full.p,class != "none")$class)
pct <- round(tab/sum(tab)*100,1)
pie(tab,labels=paste0(names(tab)," (",unname(tab),', ',unname(pct),"%)"),radius = 1,col = c("purple", "violetred1", "green3","cornsilk"))
117+66
787/(183+787)
183/(787+183)
787+183
table(df1.full.p$class)
66+114+3+787
# df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21")],by='names')
df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21","logFC.h")],by='names')
dbs <- c("GO_Molecular_Function_2021", "GO_Biological_Process_2021","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
# gene_lst <- subset(df1.full.p,class=="environment-driven")$names#
gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 > 0)$names
# gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 < 0)$names
# gene_lst <- subset(df1.full.p,class=="t21-induced")$names
# gene_lst <- subset(df1.full.p,class=="t21-induced" & chromosome_name != 21)$names
# subset(df1.full.p,class=="t21-reverted")$names
enriched <- enrichr(gene_lst, dbs)
library(enrichR)
library("enrichR")
# df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21")],by='names')
df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21","logFC.h")],by='names')
dbs <- c("GO_Molecular_Function_2021", "GO_Biological_Process_2021","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
# gene_lst <- subset(df1.full.p,class=="environment-driven")$names#
gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 > 0)$names
# gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 < 0)$names
# gene_lst <- subset(df1.full.p,class=="t21-induced")$names
# gene_lst <- subset(df1.full.p,class=="t21-induced" & chromosome_name != 21)$names
# subset(df1.full.p,class=="t21-reverted")$names
enriched <- enrichr(gene_lst, dbs)
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[3]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
subset(df1.full.p,names=="BTG3")
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
# df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21")],by='names')
df1.full.mg <- merge(df1.full.p,df1.full.lfc[,c("names","logFC.t21","logFC.h")],by='names')
subset(df1.full.mg,names=="BTG3")
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[3]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
# gene_lst <- subset(df1.full.p,class=="environment-driven")$names#
# gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 > 0)$names
gene_lst <- subset(df1.full.mg,class=="t21-induced" & logFC.t21 < 0)$names
# gene_lst <- subset(df1.full.p,class=="t21-induced")$names
# gene_lst <- subset(df1.full.p,class=="t21-induced" & chromosome_name != 21)$names
# subset(df1.full.p,class=="t21-reverted")$names
enriched <- enrichr(gene_lst, dbs)
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
y <- enriched[[dbs[3]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); (subset(y,geneCt>=3 & Adjusted.P.value<0.1))$Term
cc.genes
DEG_comparison_chr21_v_notchr21 <- function(sampletype) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x="% DEG per cell type (chr 21)",y="% DEG per cell type (not chr 21)",title=paste0(sampletype))
}
DEG_comparison_chr21_v_notchr21("Liver")
DEG_comparison_chr1_v_notchr1 <- function(sampletype) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==1),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x="% DEG per cell type (chr 21)",y="% DEG per cell type (not chr 21)",title=paste0(sampletype))
}
DEG_comparison_chr21_v_notchr21("Liver")
DEG_comparison_chr1_v_notchr1("Liver")
DEG_comparison_chr1_v_notchr1("Femur")
DEG_comparison_chrX_v_notchrX <- function(sampletype,chrNum) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==chrNum),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x="% DEG per cell type (chr 21)",y="% DEG per cell type (not chr 21)",title=paste0(sampletype))
}
DEG_comparison_chrX_v_notchrX("Liver",1)
DEG_comparison_chr1_v_notchr1("Femur",1)
DEG_comparison_chrX_v_notchrX("Liver",2)
DEG_comparison_chrX_v_notchrX("Liver",3)
DEG_comparison_chrX_v_notchrX("Liver",4)
DEG_comparison_chrX_v_notchrX("Liver",21)
DEG_comparison_chrX_v_notchrX("Liver",22)
DEG_comparison_chrX_v_notchrX("Liver",1)
DEG_comparison_chrX_v_notchrX <- function(sampletype,chrNum) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==chrNum),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
return(ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x="% DEG per cell type (chr 21)",y="% DEG per cell type (not chr 21)",title=paste0(sampletype)))
}
glst <- list()
for (i in 1:22) {
glst[[i]] <- DEG_comparison_chrX_v_notchrX("Liver",i)
}
# DEG_comparison_chr1_v_notchr1("Femur",1)
plot_grid(glst,ncol=4)
glst <- list()
for (i in 1:22) {
glst[[i]] <- DEG_comparison_chrX_v_notchrX("Liver",i)
}
?plot_grid
plot_grid(plotlist=glst,ncol=4)
DEG_comparison_chrX_v_notchrX <- function(sampletype,chrNum) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==chrNum),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
return(ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x=paste0("% DEG per cell type (chr ",X),y=paste0("% DEG per cell type (not chr ",X),title=paste0(sampletype)))
}
glst <- list()
for (i in 1:22) {
glst[[i]] <- DEG_comparison_chrX_v_notchrX("Liver",i)
}
plot_grid(plotlist=glst,ncol=4)
# DEG_comparison_chr1_v_notchr1("Femur",1)
DEG_comparison_chrX_v_notchrX <- function(sampletype,chrNum) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==chrNum),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
return(ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x=paste0("% DEG per cell type (chr ",chrNum),y=paste0("% DEG per cell type (not chr ",chrNum),title=paste0(sampletype)))
}
glst <- list()
for (i in 1:22) {
glst[[i]] <- DEG_comparison_chrX_v_notchrX("Liver",i)
}
plot_grid(plotlist=glst,ncol=4)
# DEG_comparison_chr1_v_notchr1("Femur",1)
DEG_comparison_chrX_v_notchrX <- function(sampletype,chrNum) {
res.df.all.p <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.fdr.txt"),data.table = F,stringsAsFactors=F)
res.df.all.lfc <- fread(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".FE.lfc.txt"),data.table = F,stringsAsFactors = F)
cell_type_groups <- colnames(res.df.all.p)[(which(colnames(res.df.all.p)=="names")+1):(which(colnames(res.df.all.p)=="chromosome_name")-1)]
x <- res.df.all.p
# x <- aggregate(res.df.all.p[,cell_type_groups]<0.1,by=list(chr21=res.df.all.lfc$chromosome_name==21),mean,na.rm=T)
x <- aggregate(res.df.all.p[,cell_type_groups]<0.05,by=list(chr21=res.df.all.lfc$chromosome_name==chrNum),mean,na.rm=T)
rownames(x) <- x[,1]; x <- x[,-1]; x <- as.data.frame(t(x))
colnames(x) <- c("Not Chr 21","Chr 21")
return(ggplot(x,aes(x=100*`Chr 21`,y=100*`Not Chr 21`)) +
geom_point() +
theme_bw() +
theme(panel.grid = element_blank(),
plot.title=element_text(hjust=0.5)) +
geom_smooth(method='loess',span=3,se=F,col='purple') +
labs(x=paste0("% DEG per cell type (chr ",chrNum,")"),y=paste0("% DEG per cell type (not chr ",chrNum,")"),title=paste0(sampletype)))
}
glst <- list()
for (i in 1:22) {
glst[[i]] <- DEG_comparison_chrX_v_notchrX("Liver",i)
}
plot_grid(plotlist=glst,ncol=4)
# DEG_comparison_chr1_v_notchr1("Femur",1)
library(data.table)
dirEXPRESSION <- "/oak/stanford/groups/smontgom/amarder/data/GTEx" # modify as needed
inputEXPRESSIONfile <- "GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_tpm.gct.gz"
# directories: requires path to CIBERSORT R script. need to request from https://cibersort.stanford.edu
mixture.file <- paste0(dirEXPRESSION,'/',inputEXPRESSIONfile)
mixture.file
mart <- useMart('ENSEMBL_MART_ENSEMBL', host = 'www.ensembl.org')
!(seq(0,27) %in% c(1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27))
seq(0,27)[!(seq(0,27) %in% c(1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27))]
library(data.table)
x <- rbinom(1000,2,0.4)
head(x)
x <- rbinom(1000,2,0.4)
y <- rnorm(1000); y <- y + min(y); y <- y/max(y)
head(y)
x <- rbinom(1000,2,0.4)
y <- rnorm(1000); y <- y + min(y);
y/max(y)
x <- rbinom(1000,2,0.4)
y <- rnorm(1000); y <- y + abs(min(y)); y <- y/max(y)
head(y)
range(y)
glm(y~x)
glm(y~x,family=binomial)
glm(y~x,family=binomial(link='logit'))
summary(glm(y~x,family=binomial(link='logit')))
summary(glm(y~x))
summary(lm(y~x))
summary(glm(y~x,family=binomial(link='logit')))
read.table("HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
")
read.table(text="HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
")
read.table(text=
"HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
")
?read.table
read.table(text=
"HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
",sep="\n")
cellOrder=read.table(text=
"HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
",sep="\n")
geneOrder=read.table(text=
"CD34, SPINK2, MLLT3
GATA1, KLF1, TESPA1
GATA1, KLF1, TESPA1
AHSP, ALAS2, HBA1, GYPA
GATA2, HDC, CPA3
ITGA2B, GP9
MPO, AZU1, SPI1, LYZ
CD14, CD68, S100A9, MNDA, FCN1, VCAN, IL1B
CD163, MS4A7, CTSB, STAB1
NKG7, PRF1, GZMA
IL7R, DHFR, PAX5, MME, IGLL1, IGHM, CD79A, CD19
JCHAIN, IRF8, CLEC4C, ILR3A
CD1C, CLEC4A, CLEC10A
KDR, CDH5, COL1A1, ALB, ACTA2
MKI67"
,sep='\n')
geneOrder
geneOrder[,1]
strsplit(", ",geneOrder[,1]
)
strsplit(geneOrder[,1],", ")
strsplit(gsub(" ",geneOrder[,1]),",")
?gsub
strsplit(gsub(" ",geneOrder[,1]),",")
gsub(" ",geneOrder[,1])
geneOrder[,1]
gsub("\\ ",geneOrder[,1])
?gsub
gsub("\\ "," ",geneOrder[,1])
gsub("\\ ","",geneOrder[,1])
strsplit(gsub("\\ ","",geneOrder[,1]),",")
unlist(strsplit(gsub("\\ ","",geneOrder[,1]),","))
geneOrder=unlist(strsplit(gsub("\\ ","",geneOrder[,1]),","))
cellOrder=read.table(text=
"HSC/MPP
Cycling HSC/MPPs
MEMPs
Cycling MEMPs
Early erythroid
Late erythroid cells
Mast cells
Megakaryocytes
Cycling megakaryocytes
Granulocyte progenitors
Monocyte precursors
Inflammatory macrophages
Kupffer cells
NK progenitors
NK cells
Pre-pro B cells
Pro-B cells
B cells
pDCs
Cycling pDCs
cDC2
",sep="\n")[,1]
cellOrder
# library
library(ggplot2)
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")
data
library(data.table)
