head(cb)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,P.Value.y,adj.P.Val.y)
head(cb.tmp)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,P.Value.y,adj.P.Val.y) %>%
rename(logFC.x=logFC.h.post_cellbender)
head(df.mg)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,P.Value.y,adj.P.Val.y) %>%
rename(logFC.post_cellbender.h=logFC.x,
P.Value.post_cellbender.h=P.Value.x,
adj.P.Val.post_cellbender.h=adj.P.Val.x,
logFC.post_cellbender.t21=logFC.t21,
P.Value.post_cellbender.t21=P.Value.t21,
adj.P.Val.post_cellbender.t21=adj.P.Val.t21)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,P.Value.y,adj.P.Val.y) %>%
rename(logFC.post_cellbender.h=logFC.x,
P.Value.post_cellbender.h=P.Value.x,
adj.P.Val.post_cellbender.h=adj.P.Val.x,
logFC.post_cellbender.t21=logFC.y,
P.Value.post_cellbender.t21=P.Value.y,
adj.P.Val.post_cellbender.t21=adj.P.Val.y)
head(cb)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,P.Value.y,adj.P.Val.y) %>%
rename(logFC.post_cellbender.h=logFC.x,
P.Value.post_cellbender.h=P.Value.x,
adj.P.Val.post_cellbender.h=adj.P.Val.x,
logFC.post_cellbender.t21=logFC.y,
P.Value.post_cellbender.t21=P.Value.y,
adj.P.Val.post_cellbender.t21=adj.P.Val.y)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,logFC.y,P.Value.y,adj.P.Val.y) %>%
rename(logFC.post_cellbender.h=logFC.x,
P.Value.post_cellbender.h=P.Value.x,
adj.P.Val.post_cellbender.h=adj.P.Val.x,
logFC.post_cellbender.t21=logFC.y,
P.Value.post_cellbender.t21=P.Value.y,
adj.P.Val.post_cellbender.t21=adj.P.Val.y)
head(cb.tmp)
df.mg = merge(df,cb.tmp,by="names")
head(df.mg)
df.mg = df.mg[order(df.mg$P.Value.t21),]
head(df.mg)
# create supp table for liver vs femur, including cellbender:
cb.tmp = cb %>% select(names,logFC.x,P.Value.x,adj.P.Val.x,logFC.y,P.Value.y,adj.P.Val.y) %>%
rename(logFC.post_cellbender.h=logFC.y,
P.Value.post_cellbender.h=P.Value.y,
adj.P.Val.post_cellbender.h=adj.P.Val.y,
logFC.post_cellbender.t21=logFC.x,
P.Value.post_cellbender.t21=P.Value.x,
adj.P.Val.post_cellbender.t21=adj.P.Val.x)
df.mg = merge(df,cb.tmp,by="names")
df.mg = df.mg[order(df.mg$P.Value.t21),]
head(df.mg)
fwrite(df.mg,"~/Downloads/liver_v_femur.cellbender_added.txt",quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
sum(df.mg$adj.P.Val.t21 < 0.05)
sum(df.mg$adj.P.Val.post_cellbender.t21 < 0.05)
sum(df.mg$adj.P.Val.h < 0.05)
sum(df.mg$adj.P.Val.post_cellbender.h < 0.05)
sum(df.mg$adj.P.Val.t21 < 0.05)
sum(df.mg$adj.P.Val.post_cellbender.t21 < 0.05)
df5.6
head(df5)
grep("Erg",df5$motif_name,ignore.case = T)
df5[grep("Erg",df5$motif_name,ignore.case = T),]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","adj.P.Val.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","adj.P.Val.h","adj.P.Val.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","adj.P.Val.h","adj.P.Val.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","P.Val.post_cellbender.h","P.Val.t21")]
df.mg[1,]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Val.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Value.post_cellbender.t21")]
# subset reported genes:
subset(df.mg,names %in% c("SOD1"))[,c("P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Value.post_cellbender.t21")]
subset(df.mg,names %in% c("SOD1"))
gene_lst <- subset(df.mg,class=="t21-induced" & logFC.t21 > 0)$names
library(enrichR)
dbs <- c("GO_Molecular_Function_2021", "GO_Biological_Process_2021","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y = (subset(y,geneCt>=3 & Adjusted.P.value<0.1)); y$Set <- dbs[1]; ykeep <- y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); ytmp = (subset(y,geneCt>=3 & Adjusted.P.value<0.1)); ytmp$Set <- dbs[2]; ykeep<-rbind(ykeep,ytmp)
y <- enriched[[dbs[3]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); ytmp = (subset(y,geneCt>=3 & Adjusted.P.value<0.1)); ytmp$Set <- dbs[3]; ykeep<-rbind(ykeep,ytmp)
ykeep[,1]
ykeep
subset(ykeep,ykeep[,1]=="response to reactive oxygen species (GO:0000302)")
subset(df.mg,names %in% c("JUN","FOS"))
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Value.post_cellbender.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("names","P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Value.post_cellbender.t21")]
# subset reported genes:
subset(df.mg,names %in% c("TOP2A", "CDC20",  "BIRC5", "CXCR4" , "IL6R",
"GATA1","TAL1","FOXO3","KLF1","AHSP",
"ITGA2B","SERPINE2","FOXO3","APOE","DUSP1"))[,c("names","P.Value.h","P.Value.t21","P.Value.post_cellbender.h","P.Value.post_cellbender.t21")]
flst = list.files("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names",pattern = "sample.txt")
i=1
y = strsplit(flst,"\\.")
dflst = list()
f="~/Downloads/Ts21_vs_Disomic_DE.supp.csv"
df=fread(f,data.table = F,stringsAsFactors = F)
head(df)
tail(df)
subset(df,names=="SOD1")
subset(df,names=="FUN")
subset(df,names=="JOS")
dim(df)
head(df)
subset(df,names=="DUSP1")
subset(df,names=="APOE")
f="~/Downloads/Ts21_vs_Disomic_DE.supp.csv"
df=fread(f,data.table = F,stringsAsFactors = F)
subset(df,names=="SOD1")
dim(df)
head(df)
table(df$cell)
subset(df,names %in% c("SOD1","FUN","JOS","DUSP1"))
subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))
subset(df,names=="FOXO3")
subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))
subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3")) %>%
aggregate(by='cell',mean)
head(df)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC,mean)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC,'cell',mean)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC %>% as.list(),'cell',mean)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC %>% list(),'cell',mean)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC %>% list(),by='cell',mean)
aggregate(subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))$logFC %>% list(),by=cell,mean)
tmp = subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))
aggregate(tmp$logFC %>% list(),by=tmp$cell,mean)
tmp = subset(df,names %in% c("SOD1","FUN","JOS","DUSP1","FOXO3"))
aggregate(tmp$logFC %>% list(),by=tmp$cell,mean)
aggregate(tmp$logFC,by=as.list(tmp$cell),mean)
aggregate(tmp$logFC,by=(tmp$cell),mean)
aggregate(tmp$logFC,by=list(tmp$cell),mean)
oxidative_stress_genes <- c(
"SOD1",    # Superoxide dismutase 1
"SOD2",    # Superoxide dismutase 2
"GPX1",    # Glutathione peroxidase 1
"CAT",     # Catalase
"PRDX1",   # Peroxiredoxin 1
"NFE2L2",  # Nuclear factor erythroid 2â€“related factor 2 (NRF2)
"KEAP1",   # Kelch-like ECH-associated protein 1
"HMOX1",   # Heme oxygenase 1
"GSR",     # Glutathione-disulfide reductase
"TXN",     # Thioredoxin
"TXNRD1",  # Thioredoxin reductase 1
"GPX4",    # Glutathione peroxidase 4
"GCLC",    # Glutamate-cysteine ligase catalytic subunit
"GCLM",    # Glutamate-cysteine ligase modifier subunit
"NQO1",    # NAD(P)H quinone dehydrogenase 1
"PRDX6",   # Peroxiredoxin 6
"PRDX3",   # Peroxiredoxin 3
"GSS",     # Glutathione synthetase
"ALDH2",   # Aldehyde dehydrogenase 2
"MGST1"    # Microsomal glutathione S-transferase 1
)
tmp = subset(df,names %in% oxidative_stress_genes)
aggregate(tmp$logFC,by=list(tmp$cell),mean)
oxidative_stress_genes = fread("~/Downloads/GO_term_summary_20240529_175417.txt",data.table = F,stringsAsFactors = F)
oxidative_stress_genes
oxidative_stress_genes[1,]
oxidative_stress_genes = toupper(oxidative_stress_genes[,2])
oxidative_stress_genes
oxidative_stress_genes = unique(toupper(oxidative_stress_genes[,2]))
oxidative_stress_genes = fread("~/Downloads/GO_term_summary_20240529_175417.txt",data.table = F,stringsAsFactors = F)
oxidative_stress_genes = unique(toupper(oxidative_stress_genes[,2]))
tmp = subset(df,names %in% oxidative_stress_genes)
aggregate(tmp$logFC,by=list(tmp$cell),mean)
aggregate(tmp$logFC,by=list(tmp$cell),sd)
aggregate(tmp$logFC,by=list(tmp$cell),function(x) {sd(x)/sqrt(n)})
aggregate(tmp$logFC,by=list(tmp$cell),function(x) {sd(x)/sqrt(length(x))})
aggregate(tmp$logFC,by=list(tmp$cell),mean)
aggregate(tmp$logFC,by=list(tmp$cell),function(x) {sd(x)/sqrt(length(x))})
aggregate(tmp$logFC,by=list(tmp$cell),mean)
tmp2 = aggregate(tmp$logFC,by=list(tmp$cell),mean)
tmp3 = aggregate(tmp$logFC,by=list(tmp$cell),function(x) {sd(x)/sqrt(length(x))})
merge(tmp2,tmp3,by='Group.1')
tmp4 = merge(tmp2,tmp3,by='Group.1')
scale(tmp4[,2])
tmp4$scaled = scale(tmp4[,2])
tmp4
dim(tmp4)
length(oxidative_stress_genes)
tmp4[order(tmp4$scaled)]
tmp4[order(tmp4$scaled),]
ggplot(tmp4,aes(x=Group.1,y=scaled)) + geom_point()
ggplot(tmp4,aes(x=Group.1,y=scaled)) + geom_point() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=Group.1,y=scaled)) + geom_point() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
theme_bw()
ggplot(tmp4,aes(x=Group.1,y=scaled)) + geom_point() +
theme_bw() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point() +
theme_bw() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point() +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(col='orange') +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_manual(values=c("red","blue"))
?scale_color_continuous
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_continuous(type=c("viridis"))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_continuous(type=c("viridis"))
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)")
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1),plot.title = element_text(hjust=1)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=30,hjust=1),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=1),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=.5),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=1),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=0),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=1),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
ggplot(tmp4,aes(x=reorder(Group.1,scaled,mean),y=scaled)) + geom_point(aes(col=-1*scaled)) +
theme_bw() +
ggpubr::theme_pubr() +
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=0.5),plot.title = element_text(hjust=.5)) +
scale_color_continuous(type=c("viridis")) +
geom_abline(slope=0,intercept=0,col='red',lty='dashed') +
labs(x="Cell type",y="Mean log-fold change",title = "Response to reactive oxygen species (228 genes)") +
guides(col='none')
library(data.table)
library(ggplot2)
df1 = fread("~/Downloads/Ctrl_TFR2+.csv",data.table = F,stringsAsFactors = F)
df2 = fread("~/Downloads/TFR2_TFR2 OE .csv",data.table = F,stringsAsFactors = F)
df1$set="1"
df2$set="2"
head(df1)
head(df2)
tmp = as.data.frame(rbind(df1,df2))
ggplot(tmp,aes(fill=set,x=log10(`Comp-Brilliant UV 395-A :: CD235`))) + geom_density(aes(fill=set),alpha=0.3)
ggplot(tmp,aes(fill=set,x=log10(`CD235`))) + geom_density(aes(fill=set),alpha=0.3)
median(df1$`CD235`);median(df2$`CD235`)
median(df1$`CD36`);median(df2$`CD36`)
median(df1$`CD71`);median(df2$`CD71`)
wilcox.test(df1$`CD235`,df2$`CD235`)$p.value
wilcox.test(df1$`CD36`,df2$`CD36`)$p.value
wilcox.test(df1$`CD71`,df2$`CD71`)$p.value
median(df1$`CD235`);median(df2$`CD235`)
median(df1$`CD36`);median(df2$`CD36`)
median(df1$`CD71`);median(df2$`CD71`)
wilcox.test(df1$`CD235`,df2$`CD235`)$p.value
wilcox.test(df1$`CD36`,df2$`CD36`)$p.value
wilcox.test(df1$`CD71`,df2$`CD71`)$p.value
head(df1)
t.test(df1$`CD235`,df2$`CD235`)
wilcox.test(df1$`CD235`,df2$`CD235`)$p.value
t.test(df1$`CD36`,df2$`CD36`)
wilcox.test(df1$`CD36`,df2$`CD36`)
t.test(df1$`CD36`,df2$`CD36`)
wilcox.test(df1$`CD36`,df2$`CD36`)
wilcox.test(df1$`CD71`,df2$`CD71`)
plot(log10(df1$`Comp-APC-A :: TFR2`),log10(df1$`CD235`))
# plot(log10(df1$`Comp-APC-A :: TFR2`),log10(df1$`CD235`))
plot(log10(df1$`CD36`),log10(df1$`CD235`))
wilcox.test(df1$`CD36`,df2$`CD36`)
t.test(df1$`CD36`,df2$`CD36`)
t.test(df1$`CD235`,df2$`CD235`)$p.value
t.test(df1$`CD36`,df2$`CD36`)$p.value
t.test(df1$`CD71`,df2$`CD71`)$p.value
t.test(df1$`CD235`,df2$`CD235`)
t.test(df1$`CD235`,df2$`CD235`)
t.test(df1$`CD36`,df2$`CD36`)
t.test(df1$`CD71`,df2$`CD71`)
t.test(df1$`CD235`,df2$`CD235`)
t.test(df1$`CD36`,df2$`CD36`)
t.test(df1$`CD71`,df2$`CD71`)
mean(df1$`CD71` / df2$`CD71`)
mean(df1$`CD71`) / mean(df2$`CD71`)
mean(df2$`CD71`) / mean(df1$`CD71`)
mean(df2$`CD71`) / mean(df1$`CD71`)
mean(df2$`CD235`) / mean(df1$`CD235`)
gc()
library(data.table)
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
head(df1)
dim(sdf1)
dim(df1)
dim(df2)
dim(df3)
unique(df3$`cell type`)
df.mg = merge(df1,df2,by=c('sample','cell'))
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
df.mg = merge(df1,df2,by=c('sample','cell'))
head(df1)
head(df2)
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
df.mg = merge(df1,df2,by=c('sample','cell type'))
head(df1)
head(df.mg)
dim(df.mg)
df.mg = merge(df1,df2,by=c('sample','cell type'),all=TRUE)
dim(df.mg)
df.mg
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
df.mg = merge(df1,df2,by=c('sample','cell type'),all=TRUE)
head(df1)
head(df.mg)
tail(df.mg)
unique(df.mg$`cell type`)
unique(df3$`cell type`)
unique(df3$`cell type`)[unique(df3$`cell type`) %in% unique(df.mg$`cell type`)]
unique(df3$`cell type`)[!(unique(df3$`cell type`) %in% unique(df.mg$`cell type`))]
unique(df.mg$`cell type`)
head(df3)
unique(df3$`cell type`)[unique(df3$`cell type`) %in% unique(df.mg$`cell type`)]
unique(df3$`cell type`)[!(unique(df3$`cell type`) %in% unique(df.mg$`cell type`))]
unique(df.mg$`cell type`)
unique(df3$`cell type`)
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
df.mg = merge(df1,df2,by=c('sample','cell type'),all=TRUE)
df3$`cell type`[df3$`cell type`=="B cell"] = "B cells"
df3$`cell type`[df3$`cell type`=="Early erythroid"] = "Early erythroid cells"
df3$`cell type`[df3$`cell type`=="HSC_MPP"] = "HSCs/MPPs"
df3$`cell type`[df3$`cell type`=="Hepatocyte"] = "Hepatocytes"
df3$`cell type`[df3$`cell type`=="Kupffer Cell"] = "Kupffer Cells"
df3$`cell type`[df3$`cell type`=="Late Erythroid"] = "Late erythroid cells"
df3$`cell type`[df3$`cell type`=="MEMP"] = "MEMPs"
df3$`cell type`[df3$`cell type`=="Megakaryocyte"] = "Megakaryocytes"
df3$`cell type`[df3$`cell type`=="NK"] = "NK cells"
df3$`cell type`[df3$`cell type`=="Pre pro B cell"] = "Pre pro B cells"
df3$`cell type`[df3$`cell type`=="pro-B cell"] = "Pro B cells"
head(df3)
tail(df3)
df.mg = merge(df.mg,df3,by=c('sample','cell type'),all=TRUE)
head(df.mg)
df.mg2 = merge(df4,df5,by=c('sample','cell type'),all=TRUE)
df.mg3 = as.data.frame(rbind(df.mg,df.mg2))
df.mg2 = merge(df4,df5,by=c('sample','cell type'),all=TRUE)
df.mg2$percent_ref-public = NA
df.mg2$`percent_ref-public` = NA
df.mg3 = as.data.frame(rbind(df.mg,df.mg2))
head(df.mg3)
dim(df.mg3)
head(df.mg3)
library(data.table)
df1=fread("~/Downloads/abundance_section_celltype.disomy_to_disomy.csv",data.table = F,stringsAsFactors = F)
df2=fread("~/Downloads/abundance_section_celltype.t21_to_disomy.csv",data.table = F,stringsAsFactors = F)
df3=fread("~/Downloads/abundance_section_celltype.public_to_disomy.csv",data.table = F,stringsAsFactors = F)
df4=fread("~/Downloads/abundance_section_celltype.disomy_to_t21.csv",data.table = F,stringsAsFactors = F)
df5=fread("~/Downloads/abundance_section_celltype.t21_to_t21.csv",data.table = F,stringsAsFactors = F)
df.mg = merge(df1,df2,by=c('sample','cell type'),all=TRUE)
df3$`cell type`[df3$`cell type`=="B cell"] = "B cells"
df3$`cell type`[df3$`cell type`=="Early erythroid"] = "Early erythroid cells"
df3$`cell type`[df3$`cell type`=="HSC_MPP"] = "HSCs/MPPs"
df3$`cell type`[df3$`cell type`=="Hepatocyte"] = "Hepatocytes"
df3$`cell type`[df3$`cell type`=="Kupffer Cell"] = "Kupffer Cells"
df3$`cell type`[df3$`cell type`=="Late Erythroid"] = "Late erythroid cells"
df3$`cell type`[df3$`cell type`=="MEMP"] = "MEMPs"
df3$`cell type`[df3$`cell type`=="Megakaryocyte"] = "Megakaryocytes"
df3$`cell type`[df3$`cell type`=="NK"] = "NK cells"
df3$`cell type`[df3$`cell type`=="Pre pro B cell"] = "Pre pro B cells"
df3$`cell type`[df3$`cell type`=="pro-B cell"] = "Pro B cells"
df.mg = merge(df.mg,df3,by=c('sample','cell type'),all=TRUE)
df.mg$status = "Disomy"
df.mg2 = merge(df4,df5,by=c('sample','cell type'),all=TRUE)
df.mg2$`percent_ref-public` = NA
df.mg2$status = "Ts21"
df.mg3 = as.data.frame(rbind(df.mg,df.mg2))
head(df.mg3)
tail(df.mg3)
head(df.mg3)
cor(df.mg3$`percent_ref-disomy`,df.mg3$`percent_ref-t21`)
cor(df.mg3$`percent_ref-disomy`,df.mg3$`percent_ref-t21`,use='na.or.complete')
cor(df.mg3$`percent_ref-disomy`,df.mg3$`percent_ref-public`,use='na.or.complete')
cor(df.mg3$`percent_ref-t21`,df.mg3$`percent_ref-public`,use='na.or.complete')
f.out = "~/Downloads/cell2location_supp_table.txt"
fwrite(df.mg3,f.out,quote = F,sep = '\t',row.names = F,col.names = T,na = "NA")
