rownames(presence_df) = presence_df$term
presence_df$term <- NULL  # Remove the 'term' column after setting row names
# Perform hierarchical clustering on the correlation matrix
d <- as.dist(1 - presence_df)  # convert correlation matrix to distance matrix
hc <- hclust(d, method = "complete")  # perform hierarchical clustering
head(presence_df)
# Perform hierarchical clustering on the correlation matrix
# Compute Jaccard distance between rows (terms) of the binary matrix
jaccard_dist <- dist(as.matrix(presence_df), method = "binary")
# Perform hierarchical clustering based on Jaccard distance
hc <- hclust(jaccard_dist, method = "complete")
head(jaccard_dist)
hc
hc$order
# Reorder the correlation matrix based on clustering
presence_df.ordered <- presence_df[hc$order, hc$order]
# Reorder the correlation matrix based on clustering
presence_df.ordered <- presence_df[hc$order,]
dim(presence_df.ordered)
head(presence_df.ordered)
# Convert to long format
melted_cor <- melt(presence_df.ordered)
head(melted_cor)
head(presence_df.ordered)
# Convert to long format
presence_df.ordered$term = rownames(presence_df)
melted_cor <- melt(presence_df.ordered)
# Convert to long format
presence_df.ordered$term = rownames(presence_df)
melted_cor <- melt(presence_df.ordered,by='term')
head(melted_cor)
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(Var1, Var2, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
coord_fixed() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
head(melted_cor)
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
coord_fixed() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
coord_fixed() +
theme(axis.text.x = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
head(presence_df)
apply(presence_df,1,sum)
presence_df$total = apply(presence_df,1,sum)
head(presence_df)
presence_df[order(presence_df$total),][1:10,]
presence_df[order(presence_df$total,decreasing = T),][1:10,]
data.frame(colnames(presence_df),apply(presence_df,2,sum))
mean(presence_df$total[presence_df[,1]])
mean(presence_df$total[presence_df[,2]])
presence_df$total
mean(presence_df$total[presence_df[,1]])
mean(presence_df$total[presence_df[,2]])
mean(presence_df$total[colnames(presence_df)[1]])
mean(presence_df$total[colnames(presence_df)[2]])
mean(presence_df$total[colnames(presence_df)[1]],na.rm = T)
mean(presence_df$total[colnames(presence_df)[2]],na.rm = T)
colnames(presence_df)[1]
colnames(presence_df)[2]
mean(presence_df$total[presence_df[,colnames(presence_df)[2]],na.rm = T)
mean(presence_df$total[presence_df[,colnames(presence_df)[2]]],na.rm = T)
presence_df[,colnames(presence_df)[2]]
presence_df$total[presence_df[,colnames(presence_df)[2]]
]
presence_df$total
mean(presence_df$total[presence_df[,colnames(presence_df)[1]]],na.rm = T)
presence_df$total
presence_df$total[presence_df[,colnames(presence_df)[1]]]
colnames(presence_df)
View(presence_df)
mean(presence_df$total[presence_df[,colnames(presence_df)[3]]],na.rm = T)
presence_df$total[presence_df[,colnames(presence_df)[3]]]
presence_df[,colnames(presence_df)[3]]
which(presence_df[,colnames(presence_df)[3]]==1)
which(presence_df[,colnames(presence_df)[3]]==1)
presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)]
mean(presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[2]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[2]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
presence_df$term
presence_df$Term
presence_df$term
rownames(presence_df)
presence_df["regulation of type I interferon-mediated signaling pathway (GO:0060338)",]
data.frame(colnames(presence_df),apply(presence_df,2,sum))
data.frame(colnames(presence_df),apply(presence_df,2,sum))
data.frame(colnames(presence_df),apply(presence_df,2,sum))
subset(presence_df,HSCs_MPPs==1 & total==1)
subset(presence_df,HSCs_MPPs==1 & total<=3)
presence_df[order(presence_df$total,decreasing = T),][1:10,]
presence_df[order(presence_df$total,decreasing = T),][1:30,]
t.test[presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)],
presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)]]
t.test(presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)],
presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)]])
t.test(presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)],
presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
coord_fixed() +
coord_flip() +
theme(axis.text.x = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
# Compute Jaccard distance between rows (terms) of the binary matrix
jaccard_dist <- dist(t(as.matrix(presence_df)), method = "binary")
# Perform hierarchical clustering based on Jaccard distance
hc <- hclust(jaccard_dist, method = "complete")
# Reorder the correlation matrix based on clustering
presence_df.ordered <- presence_df.ordered[,hc$order]
# Convert to long format
presence_df.ordered$term = rownames(presence_df)
melted_cor <- melt(presence_df.ordered,by='term')
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
mean(presence_df$total[which(presence_df[,colnames(presence_df)[1]]==1)])
mean(presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
median(presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)])
presence_df$total[which(presence_df[,colnames(presence_df)[3]]==1)]
presence_df[which(presence_df[,colnames(presence_df)[3]]==1),]
presence_df[order(presence_df$total,decreasing = T),][1:30,]
presence_df[order(presence_df$total,decreasing = T),][1:50,]
presence_df["pattern recognition receptor signaling pathway (GO:0002221)",]
subset(presence_df,HSCs_MPPs==1 & total<=3)
subset(HSC,names=="TGFB")
subset(HSC,names=="TGFB1")
subset(HSC,names=="TGFB2")
subset(HSC,names=="TGFB3")
subset(HSC,names=="IGF1")
subset(HSC,names=="IGF2")
subset(HSC,names=="IGF1")
subset(HSC,names=="IGF")
subset(HSC,names=="IGF1R")
subset(df,names=="GATA1")
cell_types = c("")
df = readRDS("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.Liver.lfc.rds")[[1]]
subset(df,names=="GATA1")
library(data.table)
HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
col_to_use="logFC"
df.mg = merge(HSC[,c("names",col_to_use)],
MEMP[,c("names",col_to_use)],
by="names",all = TRUE)
colnames(df.mg)[2:3] = c("HSC","MEMP")
df.mg = merge(df.mg,EarlyEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "EarlyEry"
df.mg = merge(df.mg,LateEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "LateEry"
df.mg = merge(df.mg,Megakary[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "Megakary"
subset(df.mg,names=="GATA1")
Mast = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Mast cells.sample.txt",data.table = F,stringsAsFactors = F)
subset(Mast,names=="GATA1")
subset(df.mg,names=="RUNX1")
subset(df.mg,names=="SOD2")
subset(df.mg,names=="SOD1")
subset(df,names=="SOD2")
subset(df,names=="SOD1")
oxidative_stress_genes <- c(
"SOD1", "SOD2", "CAT", "GPX1", "GPX4",
"GSTP1", "NFE2L2", "HMOX1", "NQO1", "GSR",
"TXN", "TXNRD1", "TXNRD2", "PRDX1", "PRDX2",
"PRDX3", "PRDX4", "PRDX5", "PRDX6", "GCLC",
"GCLM", "GLRX", "GLRX2", "GSS", "MGST1",
"MGST3", "MGST2", "ALDH2", "ALDH3A1", "ALDH9A1",
"ALOX5", "ALOX15", "ALOX12", "ALOXE3", "NRF1",
"NRF2", "NRF3", "KEAP1", "ARE", "HO-1",
"G6PD", "PRMT1", "NOS1", "NOS2", "NOS3",
"PRDX1", "PRDX2", "PRDX3", "PRDX4", "PRDX5"
)
subset(df,names %in% oxidative_stress_genes)
dfall = readRDS("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.Liver.p.rds")[[1]]
df=dfall
oxidative_stress_genes <- c(
"SOD1", "SOD2", "CAT", "GPX1", "GPX4",
"GSTP1", "NFE2L2", "HMOX1", "NQO1", "GSR",
"TXN", "TXNRD1", "TXNRD2", "PRDX1", "PRDX2",
"PRDX3", "PRDX4", "PRDX5", "PRDX6", "GCLC",
"GCLM", "GLRX", "GLRX2", "GSS", "MGST1",
"MGST3", "MGST2", "ALDH2", "ALDH3A1", "ALDH9A1",
"ALOX5", "ALOX15", "ALOX12", "ALOXE3", "NRF1",
"NRF2", "NRF3", "KEAP1", "ARE", "HO-1",
"G6PD", "PRMT1", "NOS1", "NOS2", "NOS3",
"PRDX1", "PRDX2", "PRDX3", "PRDX4", "PRDX5"
)
subset(df,names %in% oxidative_stress_genes)
head(HSCs)
subset(HSC,names=="SOD1")
subset(df.mg,names=="SOD1")
subset(Megakary,names=="SOD1")
subset(df,names=="SOD1")
subset(df,names=="RUNX1")
subset(df,names=="GATA1")
HSC[1,]
library(data.table)
HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
Mast = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.Mast cells.sample.txt",data.table = F,stringsAsFactors = F)
# subset(Mast,names=="GATA1")
# HSC = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.HSCs_MPPs.sample.txt",data.table = F,stringsAsFactors = F)
# MEMP = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.MEMPs.sample.txt",data.table = F,stringsAsFactors = F)
# EarlyEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Early erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
# LateEry = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Late erythroid cells.sample.txt",data.table = F,stringsAsFactors = F)
# Megakary = fread("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Femur.Megakaryocytes.sample.txt",data.table = F,stringsAsFactors = F)
# col_to_use="logFC"
col_to_use="P.Value"
df.mg = merge(HSC[,c("names",col_to_use)],
MEMP[,c("names",col_to_use)],
by="names",all = TRUE)
colnames(df.mg)[2:3] = c("HSC","MEMP")
df.mg = merge(df.mg,EarlyEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "EarlyEry"
df.mg = merge(df.mg,LateEry[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "LateEry"
df.mg = merge(df.mg,Megakary[,c("names",col_to_use)],by="names",all = TRUE); colnames(df.mg)[ncol(df.mg)] = "Megakary"
subset(df.mg,names=="GATA1")
subset(df.mg,names=="SOD1")
head(HSCs)
head(HSC)
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="Cell type")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "Correlation Matrix between non-chr21 gene LFC",x="Cell type",y="GO Term")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="Cell type",y="GO Term")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="Cell type",y="GO Term") +
guides(fill="none")
# Plot heatmap with ggplot2
ggplot(melted_cor, aes(term, variable, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
theme_minimal() +
# coord_fixed() +
# theme(axis.text.x = element_blank()) +
coord_flip() +
theme(axis.text.y = element_blank()) +
labs(title = "",x="GO Term",y="Cell type") +
guides(fill="none")
head(res.df)
head(y)
library(data.table)
library(enrichR)
cell_type = "HSCs_MPPs"
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC > 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=character(),Adjusted.P.value=character(),Genes=character())
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
library(data.table)
library(enrichR)
cell_type = "HSCs_MPPs"
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC > 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=y$P.value,Adjusted.P.value=y$Adjusted.P.value,Genes=y$Genes)
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
res.df = as.data.frame(do.call(rbind,res.lst))
head(res.df)
f.out = paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.txt")
fwrite(res.df,f.out,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
head ~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.txt
res.lst = list()
for (cell_type in c("HSCs_MPPs","Pro B cells","Pre pro B cells","pDCs","NK progenitors","NK cells","Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
# for (cell_type in c("Monocyte progenitors","MEMPs","Megakaryocytes","Mast cells","Late erythroid cells","Kupffer cells","Inflammatory macrophages","Granulocyte progenitors","Early erythroid cells","cDC2")) {
de_res = fread(paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.",cell_type,".sample.txt"),data.table = F,stringsAsFactors = F)
gene_lst <- subset(de_res,adj.P.Val < 0.05 & logFC < 0)$names
# gene_lst <- subset(MEMP,adj.P.Val < 0.05)$names
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
# y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1);y
if (nrow(y) > 0) {
tmp = data.frame(cell_type,term=y$Term,P.value=y$P.value,Adjusted.P.value=y$Adjusted.P.value,Genes=y$Genes)
} else {
tmp = data.frame(cell_type=character(),term=character(),P.value=character(),Adjusted.P.value=character(),Genes=character())
}
res.lst[[cell_type]] = tmp
}
res.df = as.data.frame(do.call(rbind,res.lst))
head(res.df)
subset(HSCs,names=="HLA-DPB1")
subset(HSC,names=="HLA-DPB1")
subset(df.mg,names=="HLA-DPB1")
f.out = paste0("~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/Liver.sample.enrichr_GO_BP.down.txt")
fwrite(res.df,f.out,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
library(data.table)
library(reshape2)
meta = fread("~/Downloads/celltype_align.csv",data.table = F,stringsAsFactors = F)
cormat = fread("~/Downloads/CorrMat.public_vs_ours.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Public"
cormelt1 = subset(cormelt,id %in% paste(meta$Public,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disomySections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Disomy"
cormelt2 = subset(cormelt,id %in% paste(meta$Disomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.t21Sections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Trisomy"
cormelt3 = subset(cormelt,id %in% paste(meta$Trisomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disjoint_disomy_sample_sets.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "DisomySep"
cormelt4 = subset(cormelt,id %in% paste(meta$Disomy,meta$Disomy))
cormat = fread("~/Downloads/CorrMat.disjoint_t21_sample_sets.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "TrisomySep"
cormelt5 = subset(cormelt,id %in% paste(meta$Trisomy,meta$Trisomy))
cormat = fread("~/Downloads/CorrMat.allSections.2condi.csv",data.table = F,stringsAsFactors = F)
# rownames(cormat)=cormat[,1];cormat = cormat[,-1]
cormelt = melt(cormat,id.vars="V1",variable.name = "column")
cormelt$id = paste(cormelt[,1],cormelt[,2])
colnames(cormelt)[3] = "Trisomy_v_Disomy.all"
cormelt6 = subset(cormelt,id %in% paste(meta$Disomy,meta$Trisomy))
res = merge(merge(cormelt2,cormelt3,by='column',all = T),cormelt1,by="column",all = T)
t.test(res$Public,res$Disomy)
t.test(res$Disomy,res$Trisomy)
ggplot(res,aes())
boxplot_data <- data.frame(
Group = rep(c("Disomy", "Trisomy"), each = length(res$Disomy)),
Value = c(res$Disomy, res$Trisomy)
)
# Create boxplot
library(ggplot2)
boxplot <- ggplot(boxplot_data, aes(x = Group, y = Value, fill = Group)) +
geom_boxplot() +
labs(title = "",
x = "Sections",
y = "Correlations") +
ggpubr::theme_pubr() +
guides(fill="none")
pdf(paste0("~/Documents/Research/t21-proj/out/full/visium_plots/","disomy_v_trisomy",".pdf"),width = 6,height=5)
print(boxplot)
dev.off()
library(edgeR)
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
x = fread(f,data.table = F,stringsAsFactors = F)
rownames(x)=x[,1];x=x[,-1]
x = cpm(x)
library(data.table)
library(edgeR)
library(data.table)
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
x = fread(f,data.table = F,stringsAsFactors = F)
rownames(x)=x[,1];x=x[,-1]
x = cpm(x)
result_generate=function() {
keep = apply(x,1,function(x){mean(x>TPM) > PROP})
genes_to_keep = rownames(x)[keep]
tmp = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep)
tab = table(tmp$cre,tmp$genotype)
k=tab[2,2];n=tab[1,2]+tab[2,2];p=(tab[2,1])/(tab[2,1]+tab[1,1])
res=binom.test(k,n,p)
out = data.frame(PROP,TPM,
prop_t21=k/n,
prop_d21=p,
l=res$conf.int[1],h=res$conf.int[2],
pval=res$p.value)
return(out)
}
PROP=0.5
TPM=0.2
# f = "~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt"
# f = "~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
f = "~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt"
i = 0;glst=list()
pvec=list();tmp1=list();tmp2=list()
set.seed(031995)
for (f in c(
"~/Downloads/Healthy_Liver_HSCs_MPPs.pb.txt",
"~/Downloads/DownSyndrome_Liver_HSCs_MPPs.pb.txt",
"~/Downloads/DownSyndrome_Liver_Cycling HSCs_MPPs.pb.txt"
)) {
i = i+1
x = fread(f,data.table = F,stringsAsFactors = F); rownames(x)=x[,1];x=x[,-1]; x = cpm(x)
print(result_generate())
keep = apply(x,1,function(x){mean(x>TPM) > PROP})
genes_to_keep = rownames(x)[keep]
tmp = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="D21")
bootstrap_func = function(i) {ind = sample(1:nrow(tmp),nrow(tmp),replace = T); tmp2 = tmp[ind,]; sum(tmp2$cre)/nrow(tmp2)}
pvec[[i]] = unlist(lapply(1:10000,bootstrap_func))
tmp1[[i]] = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="T21")
tmp2[[i]] = subset(data_snv,!exon & intron & `Gene name` %in% genes_to_keep & genotype=="D21")
library(ggplot2)
cat("P-value = ",2*(1-mean((sum(tmp1[[i]]$cre)/nrow(tmp1[[i]])) > pvec[[i]])))
g=ggplot(data.frame(pvec[[i]]),aes(x=pvec[[i]])) + geom_histogram(fill='darkblue',col='white',bins=16) +
# theme_bw() +
ggpubr::theme_pubr() +
theme(panel.grid = element_blank(),plot.title = element_text(hjust=0.5)) +
geom_vline(aes(xintercept = sum(tmp1[[i]]$cre)/nrow(tmp1[[i]]),color='Down Syndrome'),lty='dashed',lwd=2) +
geom_vline(aes(xintercept = sum(tmp2[[i]]$cre)/nrow(tmp2[[i]]),color='Disomic'),lty='dashed',lwd=2) +
labs(x="Empirical bootstrap distribution\nin disomic somatics",
title="",
y='Count') +
scale_color_manual(name = "Observed external somatic set", values = c(`Down Syndrome` = "yellow3", Disomic = "orange")) +
xlim(0.04,0.2)
# data.frame(p=sum(tmp2$cre)/nrow(tmp2),l=quantile(y,probs = 0.025),h=quantile(y,probs = 0.975))
# print(g)
glst[[i]]=g
}
