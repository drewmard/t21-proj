f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
if (length(gene_lst) > 3) {
enriched <- enrichr(gene_lst, dbs)
for (k in 1:length(dbs)) {
y <- enriched[[dbs[k]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1)
foutpath <- paste0(outdir,"/",dbs[[k]],"/",f.out)
fwrite(y,foutpath,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
}
} else {
for (k in 1:length(dbs)) {
y <- data.frame("Term Overlap"=NA,Overlap=NA,P.value=NA,Adjusted.P.value=NA,Old.P.value=NA,Old.Adjusted.P.value=NA,Odds.Ratio=NA,Combined.Score=NA,Genes=NA,geneCt=NA,check.names = F)
foutpath <- paste0(outdir,"/",dbs[[k]],"/",f.out)
fwrite(y,foutpath,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
}
}
}
}
}
}
yy
y
print(sampletype)
res.df.all.p <- readRDS(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".p.rds"))
res.df.all.lfc <- readRDS(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".lfc.rds"))
cell_type_groups <- colnames(res.df.all.p[[1]])[(which(colnames(res.df.all.p[[1]])=="names")+1):(which(colnames(res.df.all.p[[1]])=="chromosome_name")-1)]
print(iter)
df.lfc=res.df.all.lfc[[iter]]
df.p=res.df.all.p[[iter]]
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
gene_lst
subset_to_use
length(gene_lst)
enriched <- enrichr(gene_lst, dbs)
enriched
k
y <- enriched[[dbs[k]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1)
y
cell_type
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
gene_lst
i
i=2
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
gene_lst
i=1
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
gene_lst
cell_type
head(df.lfc)
subset_to_use
subset_to_use="not_chr21_down"
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- names(ranks_stats)
gene_lst
subset_to_use
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
head(x)
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
head(x)
x <- x[!is.na(x)]
x
gene_lst <- df.sub[,"names"]
gene_lst
sampletype="Femur"
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
outdir = "~/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/gsea"
for (db in dbs) {
system(paste0("mkdir -p ",paste0(outdir,"/",db)))
}
for (sampletype in c("Femur","Liver")) {
print(sampletype)
res.df.all.p <- readRDS(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".p.rds"))
res.df.all.lfc <- readRDS(paste0("/Users/andrewmarderstein/Documents/Research/t21-proj/out/full/DE_pb_leiden_names/res.",sampletype,".lfc.rds"))
cell_type_groups <- colnames(res.df.all.p[[1]])[(which(colnames(res.df.all.p[[1]])=="names")+1):(which(colnames(res.df.all.p[[1]])=="chromosome_name")-1)]
for (iter in 2:2) {
print(iter)
df.lfc=res.df.all.lfc[[iter]]
df.p=res.df.all.p[[iter]]
for (i in 1:length(cell_type_groups)) {
for (subset_to_use in c("not_chr21_up","not_chr21_down","chr21_up")) {
cell_type = cell_type_groups[i]
print(paste0("enrichR: ",sampletype," - ",subset_to_use,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Not Chr 21"]
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
x <- df.lfc$names[df.lfc[,cell_type] > 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
x <- df.lfc$names[df.lfc[,cell_type] < 0 & df.p[,cell_type] < 0.1 & df.lfc[,"chr21"]=="Chr 21"]
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
x <- x[!is.na(x)]
df.sub <- df.lfc[df.lfc$names %in% x,c(cell_type,"names")]
gene_lst <- df.sub[,"names"]
if (length(gene_lst) > 3) {
enriched <- enrichr(gene_lst, dbs)
for (k in 1:length(dbs)) {
y <- enriched[[dbs[k]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); y <- subset(y,geneCt>3 & Adjusted.P.value<0.1)
foutpath <- paste0(outdir,"/",dbs[[k]],"/",f.out)
fwrite(y,foutpath,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
}
} else {
for (k in 1:length(dbs)) {
y <- data.frame("Term Overlap"=NA,Overlap=NA,P.value=NA,Adjusted.P.value=NA,Old.P.value=NA,Old.Adjusted.P.value=NA,Odds.Ratio=NA,Combined.Score=NA,Genes=NA,geneCt=NA,check.names = F)
foutpath <- paste0(outdir,"/",dbs[[k]],"/",f.out)
fwrite(y,foutpath,quote = F,na = "NA",sep = '\t',row.names = F,col.names = T)
}
}
}
}
}
}
dbs
k
k=1
foutpath <- paste0(outdir,"/",dbs[k],"/",f.out)
foutpath
head(y)
library(data.table)
df.save <- list()
for (sampletype in c("Femur","Liver")) {
for (iter in 2:2) {
for (db in dbs) {
for (i in 1:length(cell_type_groups)) {
for (subset_to_use in c("not_chr21_up","not_chr21_down","chr21_up","chr21_down")) {
print(subset_to_use)
cell_type = cell_type_groups[i]
print(paste0("GSEA - gene set: ",gene_set,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
f.out <- paste0("gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
f.out <- paste0("gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
f.out <- paste0("gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
f.out <- paste0("gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
foutpath <- paste0(outdir,"/",db,"/",f.out)
if (!file.exists(foutpath)) { next}
df <- fread(foutpath,data.table = F,stringsAsFactors = F)
df.sub <- subset(df,Adjusted.P.value < 0.1)
if (nrow(df.sub) > 0) {
df.sub$sampletype <- sampletype
df.sub$iter <- iter
df.sub$db <- db
df.sub$cell_type <- cell_type
df.sub$subset_to_use <- subset_to_use
}
if (is.null(df.save)) {
df.save <- df.sub
}
df.save <- rbind(df.save,df.sub)
}
}
}
}
}
head(df.save)
dim(df.save)
sort(table(df.save$Term),decreasing = T)
sort(table(df.save$Term),decreasing = T)[1:3]
sort(table(df.save$Term),decreasing = T)[1:10]
sort(table(df.save$Term),decreasing = T)[1:20]
sort(table(df.save$Term),decreasing = T)[1:30]
table(subset(df.save,iter==2)[,c('subset_to_use','sampletype')])
table(subset(df.save,iter==2)[,c('subset_to_use','sampletype')])
head(df.save)
df.save[order(df.save$Adjusted.P.value)[1:5],]
df.save[1,]
df.save[order(df.save$Adjusted.P.value)[1:5],][,c("Term","Adjusted.P.value","geneCt","db","cell_type","subset_to_use")]
df.save[order(df.save$Adjusted.P.value)[1:5],][,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.save[order(df.save$Adjusted.P.value)[1:5],][,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.save[order(df.save$Adjusted.P.value)[1:15],][,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down")
sort(table(df.sub$Term))
sort(table(df.sub$Term,decreasing=T))[1:5]
sort(table(df.sub$Term),decreasing=T)[1:5]
subset(df.sub,Term=="UBTF ENCODE")
subset(df.sub,Term=="UBTF ENCODE")
sort(table(df.sub$Term),decreasing=T)[1:5]
# subset(df.sub,Term=="UBTF ENCODE")
names(sort(table(df.sub$Term),decreasing=T)[1:5])
# subset(df.sub,Term=="UBTF ENCODE")
names(sort(table(df.sub$Term),decreasing=T)[1:10])
sort(table(df.sub$Term),decreasing=T)[1:10]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1])
# subset(df.sub,Term=="UBTF ENCODE")
names(sort(table(df.sub$Term),decreasing=T)[1:10])
names
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[2])
(sort(table(df.sub$Term),decreasing=T)[1:10])
head(df.save)
table(df.save[,c('cell_type')])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[2])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3])
(sort(table(df.sub$Term),decreasing=T)[1:10])
grep("GATA1",df.sub$Term)
grep("GATA1",df.save$Term)
df.save[grep("GATA1",df.save$Term),]
df.save[grep("GATA1",df.save$Term),c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
table(df.sub$Term)
dbs
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
df.sub
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub[1,]
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
dim(df.sub)
df.save[grep("GATA1",df.save$Term),c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
dim(df.sub)
df.sub <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
df.sub <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
subset(df.sub,Term=="GAA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
subset(df.sub,Term=="GATA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
subset(df.sub,Term=="GATA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
subset(df.sub,Term=="GATA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
subset(df.sub,Term=="RUNX1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
subset(df.sub,Term=="GATA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
subset(df.sub,Term=="RUNX1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
subset(df.sub,Term=="MYC ENCODE")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
subset(df.sub,Term=="GATA1 CHEA")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
subset(df.sub,Term=="MYC ENCODE")[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
df.sub1 <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
df.sub2 <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
head(df.sub1)
df.sub.mg <- merge(df.sub1,df.sub2,by="Term")
head(df.sub.mg)
plot(-log10(df.sub.mg$Adjusted.P.value.x),-log10(df.sub.mg$Adjusted.P.value.y))
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:3,]
df.sub <- subset(df.save,subset_to_use=="not_chr21_up" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:3,]
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]$Term
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:3,]
df.sub.mg <- merge(df.sub1,df.sub2,by="Term",all=T)
is.na(df.sub.mg$P.value.x)
df.sub.mg$Adjusted.P.value.x[is.na(df.sub.mg$P.value.x)] <- 1
df.sub.mg$Adjusted.P.value.y[is.na(df.sub.mg$P.value.y)] <- 1
plot(-log10(df.sub.mg$Adjusted.P.value.x),-log10(df.sub.mg$Adjusted.P.value.y))
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) + geom_point()
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw()
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank())
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF sets - downreg genes (-log10 FDR)',y='TF sets - upreg genes (-log10 FDR)')
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF sets - downreg genes (-log10 FDR)',y='TF sets - upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3)
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF sets - downreg genes (-log10 FDR)',y='TF sets - upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F)
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF sets from downreg genes (-log10 FDR)',y='TF sets from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F)
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F)
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F,col='purple')
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=1,se=F,col='purple')
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F,col='purple')
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=.3,se=F,col='purple')
ggplot(df.sub.mg,aes(x=-log10(Adjusted.P.value.x),y=-log10(Adjusted.P.value.y))) +
geom_point() + theme_bw() + theme(panel.grid = element_blank()) +
labs(x='TF enrichment from downreg genes (-log10 FDR)',y='TF enrichment from upreg genes (-log10 FDR)') +
geom_smooth(method='loess',span=3,se=F,col='purple')
cor(-log10(df.sub.mg$Adjusted.P.value.x),y=-log10(df.sub.mg$Adjusted.P.value.y))
cor.test(-log10(df.sub.mg$Adjusted.P.value.x),y=-log10(df.sub.mg$Adjusted.P.value.y))
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[2])
(sort(table(df.sub$Term),decreasing=T)[1:10])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[3])
(sort(table(df.sub$Term),decreasing=T)[1:10])
dbs
df.save[grep("GATA1",df.save$Term),c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]
gene_lst <- subset(tmp,med_padj < 0.1 & chromosome_name!=21)$names
# gene_lst <- subset(tmp,med_padj < 0.1)$names # & chromosome_name==21)$names
library("enrichR")
dbs <- c("GO_Molecular_Function_2018", "GO_Biological_Process_2018","ENCODE_and_ChEA_Consensus_TFs_from_ChIP-X")
enriched <- enrichr(gene_lst, dbs)
y <- enriched[[dbs[1]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); head(subset(y,geneCt>3),3)
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); head(subset(y,geneCt>3 & Adjusted.P.value<0.1),15)$Term
y <- enriched[[dbs[2]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); head(subset(y,geneCt>3 & Adjusted.P.value<0.1),25)$Term
y <- enriched[[dbs[3]]]; y$geneCt <- as.numeric(gsub("\\/[0-9]*","",y[,'Overlap'],fixed=F)); head(subset(y,geneCt>3 & Adjusted.P.value<0.1),20)$Term
table(df.save[,c('cell_type')])
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[2] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
head(df.sub)
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")]#$Term
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:3,]
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:10,]
dim(df.sub)
dbs
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:10,]
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:10,]$Term
df.sub[,c("Term","Adjusted.P.value","geneCt","db","sampletype","cell_type","subset_to_use")][1:100,]$Term
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[2] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
df.sub <- subset(df.save,subset_to_use=="not_chr21_down" & db==dbs[1] & cell_type=="Late erythroid cells" & sampletype=="Femur")
dim(df.sub)
dbs
library(data.table)
df.save <- list()
for (sampletype in c("Femur","Liver")) {
for (iter in 1:3) {
for (gene_set in gene_set_list) {
for (i in 1:length(cell_type_groups)) {
for (subset_to_use in c("not_chr21_up","not_chr21_down","chr21_up","chr21_down")) {
print(subset_to_use)
cell_type = cell_type_groups[i]
print(paste0("GSEA - gene set: ",gene_set,' (',cell_type,', ',i,'/',length(cell_type_groups),')'))
if (subset_to_use=="not_chr21_up") {
f.out <- paste0(outdir,"/",gene_set,".v7.5/gsea.not_chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="not_chr21_down") {
f.out <- paste0(outdir,"/",gene_set,".v7.5/gsea.not_chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_up") {
f.out <- paste0(outdir,"/",gene_set,".v7.5/gsea.chr21.up.iter",iter,".",cell_type,".",sampletype,".txt")
} else if (subset_to_use=="chr21_down") {
f.out <- paste0(outdir,"/",gene_set,".v7.5/gsea.chr21.down.iter",iter,".",cell_type,".",sampletype,".txt")
}
if (!file.exists(f.out)) { next}
df <- fread(f.out,data.table = F,stringsAsFactors = F)
df.sub <- subset(df,padj < 0.1)
if (nrow(df.sub) > 0) {
df.sub$sampletype <- sampletype
df.sub$iter <- iter
df.sub$gene_set <- gene_set
df.sub$cell_type <- cell_type
df.sub$subset_to_use <- subset_to_use
}
if (is.null(df.save)) {
df.save <- df.sub
}
df.save <- rbind(df.save,df.sub)
}
}
}
}
}
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
head(df.sub)
df.save[order(df.save$padj)[1:5],]
df.save[order(df.save$padj)[1:5],c(1,3,7,9:13)]
View(df.save)
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
df.sub[order(df.sub$padj)[1:5],c(1,3,7,9:13)]
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
order(df.sub$padj)[1:5]
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
df.sub[order(df.sub$padj)[1:5],c(1,3,7,9:13)]
df.sub[order(df.sub$padj)[1:3],c(1,3,7,9:13)]
df.sub[,c(1,3,7,9:13)]
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
head(df.sub)
df.sub$padj
dim(df.sub)
df.sub <- df.save[df.save$cell_type=="Late erythroid cells" & df.save$gene_set!="c8.all" & df.save$iter==2,c(1,3,7,9:13)]
df.sub
